-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.5 from .\JavaletteParser.y
-----------------------------------------------------------------------------

state 16 contains 1 shift/reduce conflicts.
state 38 contains 1 shift/reduce conflicts.
state 165 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_javaletteParse -> Program                   (0)
	Program -> FunctionList                            (1)
	FunctionList -> Function FunctionList              (2)
	FunctionList ->                                    (3)
	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList "}"   (4)
	Function -> error Ident "(" FunctionArgs ")" "{" StmtList "}"   (5)
	Function -> Type error "(" FunctionArgs ")" "{" StmtList "}"   (6)
	Function -> Type Ident error FunctionArgs ")" "{" StmtList "}"   (7)
	Function -> Type Ident "(" error ")" "{" StmtList "}"   (8)
	Function -> Type Ident "(" FunctionArgs error "{" StmtList "}"   (9)
	Function -> Type Ident "(" FunctionArgs ")" error StmtList "}"   (10)
	Function -> Type Ident "(" FunctionArgs ")" "{" error "}"   (11)
	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList error   (12)
	FunctionArgs -> FunctionArg                        (13)
	FunctionArgs -> FunctionArg "," FunctionArgs       (14)
	FunctionArgs ->                                    (15)
	FunctionArg -> Type Ident                          (16)
	Stmt -> StmtComp                                   (17)
	Stmt -> StmtDecl                                   (18)
	Stmt -> StmtAssig                                  (19)
	Stmt -> StmtIf                                     (20)
	Stmt -> StmtWhile                                  (21)
	Stmt -> StmtFor                                    (22)
	Stmt -> StmtReturn                                 (23)
	Stmt -> StmtExp                                    (24)
	StmtComp -> "{" StmtList "}"                       (25)
	StmtList -> Stmt StmtList                          (26)
	StmtList ->                                        (27)
	StmtDecl -> Type DeclList ";"                      (28)
	DeclList -> Decl                                   (29)
	DeclList -> Decl "," DeclList                      (30)
	Decl -> Ident                                      (31)
	Decl -> Ident "=" Exp                              (32)
	StmtAssig -> Assig ";"                             (33)
	Assig -> Ident "=" Exp                             (34)
	Assig -> Ident "++"                                (35)
	Assig -> Ident "--"                                (36)
	StmtIf -> "if" "(" Exp ")" Stmt                    (37)
	StmtIf -> "if" "(" Exp ")" Stmt "else" Stmt        (38)
	StmtWhile -> "while" "(" Exp ")" Stmt              (39)
	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" Stmt   (40)
	StmtReturn -> "return" ";"                         (41)
	StmtReturn -> "return" Exp ";"                     (42)
	StmtExp -> Exp ";"                                 (43)
	Type -> "int"                                      (44)
	Type -> "double"                                   (45)
	Type -> "boolean"                                  (46)
	Type -> "void"                                     (47)
	Exp -> ExpOr                                       (48)
	ExpOr -> ExpAnd                                    (49)
	ExpOr -> ExpOr "||" ExpAnd                         (50)
	ExpAnd -> ExpCompe                                 (51)
	ExpAnd -> ExpAnd "&&" ExpCompe                     (52)
	ExpCompe -> ExpRel                                 (53)
	ExpCompe -> ExpCompe "==" ExpRel                   (54)
	ExpCompe -> ExpCompe "!=" ExpRel                   (55)
	ExpRel -> ExpAddi                                  (56)
	ExpRel -> ExpRel "<" ExpAddi                       (57)
	ExpRel -> ExpRel ">" ExpAddi                       (58)
	ExpRel -> ExpRel "<=" ExpAddi                      (59)
	ExpRel -> ExpRel ">=" ExpAddi                      (60)
	ExpAddi -> ExpMulti                                (61)
	ExpAddi -> ExpAddi "+" ExpMulti                    (62)
	ExpAddi -> ExpAddi "-" ExpMulti                    (63)
	ExpMulti -> ExpOneArg                              (64)
	ExpMulti -> ExpMulti "*" ExpOneArg                 (65)
	ExpMulti -> ExpMulti "/" ExpOneArg                 (66)
	ExpMulti -> ExpMulti "%" ExpOneArg                 (67)
	ExpOneArg -> ExpPostfix                            (68)
	ExpOneArg -> "!" ExpOneArg                         (69)
	ExpOneArg -> "+" ExpOneArg                         (70)
	ExpOneArg -> "-" ExpOneArg                         (71)
	ExpPostfix -> ExpSimp                              (72)
	ExpPostfix -> ExpCallFunc                          (73)
	ExpCallFunc -> Ident "(" ExpList ")"               (74)
	ExpList -> Exp                                     (75)
	ExpList -> Exp "," ExpList                         (76)
	ExpList ->                                         (77)
	ExpList -> error                                   (78)
	ExpSimp -> Ident                                   (79)
	ExpSimp -> Literal                                 (80)
	ExpSimp -> "(" Exp ")"                             (81)
	Literal -> IntLiteral                              (82)
	Literal -> DoubleLiteral                           (83)
	Literal -> StringLiteral                           (84)
	Literal -> FalseLiteral                            (85)
	Literal -> TrueLiteral                             (86)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"int"          { Pos _ TInt }
	"double"       { Pos _ TDouble }
	"boolean"      { Pos _ TBoolean }
	"void"         { Pos _ TVoid }
	FalseLiteral   { Pos _ TFalseLiteral }
	TrueLiteral    { Pos _ TTrueLiteral }
	IntLiteral     { Pos _ (TIntLiteral _) }
	DoubleLiteral  { Pos _ (TDoubleLiteral _) }
	StringLiteral  { Pos _ (TStringLiteral _) }
	"("            { Pos _ TLeftParen }
	")"            { Pos _ TRightParen }
	"{"            { Pos _ TLeftBrace }
	"}"            { Pos _ TRightBrace }
	","            { Pos _ TComma }
	";"            { Pos _ TSemicolon }
	"="            { Pos _ TAssignSign }
	"++"           { Pos _ TIncrement }
	"--"           { Pos _ TDecrement }
	"||"           { Pos _ TOr }
	"&&"           { Pos _ TAnd }
	"=="           { Pos _ TEqualsSign }
	"!="           { Pos _ TNotEqualsSign }
	"<"            { Pos _ TLessSign }
	">"            { Pos _ TGreaterSign }
	"<="           { Pos _ TLeOrEqSign }
	">="           { Pos _ TGrOrEqSign }
	"+"            { Pos _ TPlusSign }
	"-"            { Pos _ TMinusSign }
	"/"            { Pos _ TDivSign }
	"%"            { Pos _ TModSign }
	"*"            { Pos _ TMultiSign }
	"!"            { Pos _ TNot }
	"if"           { Pos _ TIf }
	"else"         { Pos _ TElse }
	"while"        { Pos _ TWhile }
	"for"          { Pos _ TFor }
	"return"       { Pos _ TReturn }
	Ident          { Pos _ (TIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_javaletteParse rule  0
	Program         rule  1
	FunctionList    rules 2, 3
	Function        rules 4, 5, 6, 7, 8, 9, 10, 11, 12
	FunctionArgs    rules 13, 14, 15
	FunctionArg     rule  16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24
	StmtComp        rule  25
	StmtList        rules 26, 27
	StmtDecl        rule  28
	DeclList        rules 29, 30
	Decl            rules 31, 32
	StmtAssig       rule  33
	Assig           rules 34, 35, 36
	StmtIf          rules 37, 38
	StmtWhile       rule  39
	StmtFor         rule  40
	StmtReturn      rules 41, 42
	StmtExp         rule  43
	Type            rules 44, 45, 46, 47
	Exp             rule  48
	ExpOr           rules 49, 50
	ExpAnd          rules 51, 52
	ExpCompe        rules 53, 54, 55
	ExpRel          rules 56, 57, 58, 59, 60
	ExpAddi         rules 61, 62, 63
	ExpMulti        rules 64, 65, 66, 67
	ExpOneArg       rules 68, 69, 70, 71
	ExpPostfix      rules 72, 73
	ExpCallFunc     rule  74
	ExpList         rules 75, 76, 77, 78
	ExpSimp         rules 79, 80, 81
	Literal         rules 82, 83, 84, 85, 86

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	error          shift, and enter state 5
	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	%eof           reduce using rule 3

	Program        goto state 10
	FunctionList   goto state 2
	Function       goto state 3
	Type           goto state 4

State 1


	error          shift, and enter state 5
	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9

	FunctionList   goto state 2
	Function       goto state 3
	Type           goto state 4

State 2

	Program -> FunctionList .                           (rule 1)

	%eof           reduce using rule 1


State 3

	FunctionList -> Function . FunctionList             (rule 2)

	error          shift, and enter state 5
	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	%eof           reduce using rule 3

	FunctionList   goto state 14
	Function       goto state 3
	Type           goto state 4

State 4

	Function -> Type . Ident "(" FunctionArgs ")" "{" StmtList "}"    (rule 4)
	Function -> Type . error "(" FunctionArgs ")" "{" StmtList "}"    (rule 6)
	Function -> Type . Ident error FunctionArgs ")" "{" StmtList "}"    (rule 7)
	Function -> Type . Ident "(" error ")" "{" StmtList "}"    (rule 8)
	Function -> Type . Ident "(" FunctionArgs error "{" StmtList "}"    (rule 9)
	Function -> Type . Ident "(" FunctionArgs ")" error StmtList "}"    (rule 10)
	Function -> Type . Ident "(" FunctionArgs ")" "{" error "}"    (rule 11)
	Function -> Type . Ident "(" FunctionArgs ")" "{" StmtList error    (rule 12)

	error          shift, and enter state 12
	Ident          shift, and enter state 13


State 5

	Function -> error . Ident "(" FunctionArgs ")" "{" StmtList "}"    (rule 5)

	Ident          shift, and enter state 11


State 6

	Type -> "int" .                                     (rule 44)

	error          reduce using rule 44
	Ident          reduce using rule 44


State 7

	Type -> "double" .                                  (rule 45)

	error          reduce using rule 45
	Ident          reduce using rule 45


State 8

	Type -> "boolean" .                                 (rule 46)

	error          reduce using rule 46
	Ident          reduce using rule 46


State 9

	Type -> "void" .                                    (rule 47)

	error          reduce using rule 47
	Ident          reduce using rule 47


State 10

	%start_javaletteParse -> Program .                  (rule 0)

	%eof           accept


State 11

	Function -> error Ident . "(" FunctionArgs ")" "{" StmtList "}"    (rule 5)

	"("            shift, and enter state 18


State 12

	Function -> Type error . "(" FunctionArgs ")" "{" StmtList "}"    (rule 6)

	"("            shift, and enter state 17


State 13

	Function -> Type Ident . "(" FunctionArgs ")" "{" StmtList "}"    (rule 4)
	Function -> Type Ident . error FunctionArgs ")" "{" StmtList "}"    (rule 7)
	Function -> Type Ident . "(" error ")" "{" StmtList "}"    (rule 8)
	Function -> Type Ident . "(" FunctionArgs error "{" StmtList "}"    (rule 9)
	Function -> Type Ident . "(" FunctionArgs ")" error StmtList "}"    (rule 10)
	Function -> Type Ident . "(" FunctionArgs ")" "{" error "}"    (rule 11)
	Function -> Type Ident . "(" FunctionArgs ")" "{" StmtList error    (rule 12)

	error          shift, and enter state 15
	"("            shift, and enter state 16


State 14

	FunctionList -> Function FunctionList .             (rule 2)

	%eof           reduce using rule 2


State 15

	Function -> Type Ident error . FunctionArgs ")" "{" StmtList "}"    (rule 7)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	")"            reduce using rule 15

	FunctionArgs   goto state 25
	FunctionArg    goto state 20
	Type           goto state 21

State 16

	Function -> Type Ident "(" . FunctionArgs ")" "{" StmtList "}"    (rule 4)
	Function -> Type Ident "(" . error ")" "{" StmtList "}"    (rule 8)
	Function -> Type Ident "(" . FunctionArgs error "{" StmtList "}"    (rule 9)
	Function -> Type Ident "(" . FunctionArgs ")" error StmtList "}"    (rule 10)
	Function -> Type Ident "(" . FunctionArgs ")" "{" error "}"    (rule 11)
	Function -> Type Ident "(" . FunctionArgs ")" "{" StmtList error    (rule 12)

	error          shift, and enter state 24
			(reduce using rule 15)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	")"            reduce using rule 15

	FunctionArgs   goto state 23
	FunctionArg    goto state 20
	Type           goto state 21

State 17

	Function -> Type error "(" . FunctionArgs ")" "{" StmtList "}"    (rule 6)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	")"            reduce using rule 15

	FunctionArgs   goto state 22
	FunctionArg    goto state 20
	Type           goto state 21

State 18

	Function -> error Ident "(" . FunctionArgs ")" "{" StmtList "}"    (rule 5)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	")"            reduce using rule 15

	FunctionArgs   goto state 19
	FunctionArg    goto state 20
	Type           goto state 21

State 19

	Function -> error Ident "(" FunctionArgs . ")" "{" StmtList "}"    (rule 5)

	")"            shift, and enter state 33


State 20

	FunctionArgs -> FunctionArg .                       (rule 13)
	FunctionArgs -> FunctionArg . "," FunctionArgs      (rule 14)

	error          reduce using rule 13
	")"            reduce using rule 13
	","            shift, and enter state 32


State 21

	FunctionArg -> Type . Ident                         (rule 16)

	Ident          shift, and enter state 31


State 22

	Function -> Type error "(" FunctionArgs . ")" "{" StmtList "}"    (rule 6)

	")"            shift, and enter state 30


State 23

	Function -> Type Ident "(" FunctionArgs . ")" "{" StmtList "}"    (rule 4)
	Function -> Type Ident "(" FunctionArgs . error "{" StmtList "}"    (rule 9)
	Function -> Type Ident "(" FunctionArgs . ")" error StmtList "}"    (rule 10)
	Function -> Type Ident "(" FunctionArgs . ")" "{" error "}"    (rule 11)
	Function -> Type Ident "(" FunctionArgs . ")" "{" StmtList error    (rule 12)

	error          shift, and enter state 28
	")"            shift, and enter state 29


State 24

	Function -> Type Ident "(" error . ")" "{" StmtList "}"    (rule 8)

	")"            shift, and enter state 27


State 25

	Function -> Type Ident error FunctionArgs . ")" "{" StmtList "}"    (rule 7)

	")"            shift, and enter state 26


State 26

	Function -> Type Ident error FunctionArgs ")" . "{" StmtList "}"    (rule 7)

	"{"            shift, and enter state 41


State 27

	Function -> Type Ident "(" error ")" . "{" StmtList "}"    (rule 8)

	"{"            shift, and enter state 40


State 28

	Function -> Type Ident "(" FunctionArgs error . "{" StmtList "}"    (rule 9)

	"{"            shift, and enter state 39


State 29

	Function -> Type Ident "(" FunctionArgs ")" . "{" StmtList "}"    (rule 4)
	Function -> Type Ident "(" FunctionArgs ")" . error StmtList "}"    (rule 10)
	Function -> Type Ident "(" FunctionArgs ")" . "{" error "}"    (rule 11)
	Function -> Type Ident "(" FunctionArgs ")" . "{" StmtList error    (rule 12)

	error          shift, and enter state 37
	"{"            shift, and enter state 38


State 30

	Function -> Type error "(" FunctionArgs ")" . "{" StmtList "}"    (rule 6)

	"{"            shift, and enter state 36


State 31

	FunctionArg -> Type Ident .                         (rule 16)

	error          reduce using rule 16
	")"            reduce using rule 16
	","            reduce using rule 16


State 32

	FunctionArgs -> FunctionArg "," . FunctionArgs      (rule 14)

	error          reduce using rule 15
	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	")"            reduce using rule 15

	FunctionArgs   goto state 35
	FunctionArg    goto state 20
	Type           goto state 21

State 33

	Function -> error Ident "(" FunctionArgs ")" . "{" StmtList "}"    (rule 5)

	"{"            shift, and enter state 34


State 34

	Function -> error Ident "(" FunctionArgs ")" "{" . StmtList "}"    (rule 5)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 87
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 35

	FunctionArgs -> FunctionArg "," FunctionArgs .      (rule 14)

	error          reduce using rule 14
	")"            reduce using rule 14


State 36

	Function -> Type error "(" FunctionArgs ")" "{" . StmtList "}"    (rule 6)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 86
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 37

	Function -> Type Ident "(" FunctionArgs ")" error . StmtList "}"    (rule 10)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 85
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 38

	Function -> Type Ident "(" FunctionArgs ")" "{" . StmtList "}"    (rule 4)
	Function -> Type Ident "(" FunctionArgs ")" "{" . error "}"    (rule 11)
	Function -> Type Ident "(" FunctionArgs ")" "{" . StmtList error    (rule 12)

	error          shift, and enter state 84
			(reduce using rule 27)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 83
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 39

	Function -> Type Ident "(" FunctionArgs error "{" . StmtList "}"    (rule 9)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 82
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 40

	Function -> Type Ident "(" error ")" "{" . StmtList "}"    (rule 8)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 81
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 41

	Function -> Type Ident error FunctionArgs ")" "{" . StmtList "}"    (rule 7)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 44
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 42

	StmtList -> Stmt . StmtList                         (rule 26)

	error          reduce using rule 27
	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 130
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 43

	Stmt -> StmtComp .                                  (rule 17)

	error          reduce using rule 17
	"int"          reduce using rule 17
	"double"       reduce using rule 17
	"boolean"      reduce using rule 17
	"void"         reduce using rule 17
	FalseLiteral   reduce using rule 17
	TrueLiteral    reduce using rule 17
	IntLiteral     reduce using rule 17
	DoubleLiteral  reduce using rule 17
	StringLiteral  reduce using rule 17
	"("            reduce using rule 17
	"{"            reduce using rule 17
	"}"            reduce using rule 17
	"+"            reduce using rule 17
	"-"            reduce using rule 17
	"!"            reduce using rule 17
	"if"           reduce using rule 17
	"else"         reduce using rule 17
	"while"        reduce using rule 17
	"for"          reduce using rule 17
	"return"       reduce using rule 17
	Ident          reduce using rule 17


State 44

	Function -> Type Ident error FunctionArgs ")" "{" StmtList . "}"    (rule 7)

	"}"            shift, and enter state 129


State 45

	Stmt -> StmtDecl .                                  (rule 18)

	error          reduce using rule 18
	"int"          reduce using rule 18
	"double"       reduce using rule 18
	"boolean"      reduce using rule 18
	"void"         reduce using rule 18
	FalseLiteral   reduce using rule 18
	TrueLiteral    reduce using rule 18
	IntLiteral     reduce using rule 18
	DoubleLiteral  reduce using rule 18
	StringLiteral  reduce using rule 18
	"("            reduce using rule 18
	"{"            reduce using rule 18
	"}"            reduce using rule 18
	"+"            reduce using rule 18
	"-"            reduce using rule 18
	"!"            reduce using rule 18
	"if"           reduce using rule 18
	"else"         reduce using rule 18
	"while"        reduce using rule 18
	"for"          reduce using rule 18
	"return"       reduce using rule 18
	Ident          reduce using rule 18


State 46

	Stmt -> StmtAssig .                                 (rule 19)

	error          reduce using rule 19
	"int"          reduce using rule 19
	"double"       reduce using rule 19
	"boolean"      reduce using rule 19
	"void"         reduce using rule 19
	FalseLiteral   reduce using rule 19
	TrueLiteral    reduce using rule 19
	IntLiteral     reduce using rule 19
	DoubleLiteral  reduce using rule 19
	StringLiteral  reduce using rule 19
	"("            reduce using rule 19
	"{"            reduce using rule 19
	"}"            reduce using rule 19
	"+"            reduce using rule 19
	"-"            reduce using rule 19
	"!"            reduce using rule 19
	"if"           reduce using rule 19
	"else"         reduce using rule 19
	"while"        reduce using rule 19
	"for"          reduce using rule 19
	"return"       reduce using rule 19
	Ident          reduce using rule 19


State 47

	StmtAssig -> Assig . ";"                            (rule 33)

	";"            shift, and enter state 128


State 48

	Stmt -> StmtIf .                                    (rule 20)

	error          reduce using rule 20
	"int"          reduce using rule 20
	"double"       reduce using rule 20
	"boolean"      reduce using rule 20
	"void"         reduce using rule 20
	FalseLiteral   reduce using rule 20
	TrueLiteral    reduce using rule 20
	IntLiteral     reduce using rule 20
	DoubleLiteral  reduce using rule 20
	StringLiteral  reduce using rule 20
	"("            reduce using rule 20
	"{"            reduce using rule 20
	"}"            reduce using rule 20
	"+"            reduce using rule 20
	"-"            reduce using rule 20
	"!"            reduce using rule 20
	"if"           reduce using rule 20
	"else"         reduce using rule 20
	"while"        reduce using rule 20
	"for"          reduce using rule 20
	"return"       reduce using rule 20
	Ident          reduce using rule 20


State 49

	Stmt -> StmtWhile .                                 (rule 21)

	error          reduce using rule 21
	"int"          reduce using rule 21
	"double"       reduce using rule 21
	"boolean"      reduce using rule 21
	"void"         reduce using rule 21
	FalseLiteral   reduce using rule 21
	TrueLiteral    reduce using rule 21
	IntLiteral     reduce using rule 21
	DoubleLiteral  reduce using rule 21
	StringLiteral  reduce using rule 21
	"("            reduce using rule 21
	"{"            reduce using rule 21
	"}"            reduce using rule 21
	"+"            reduce using rule 21
	"-"            reduce using rule 21
	"!"            reduce using rule 21
	"if"           reduce using rule 21
	"else"         reduce using rule 21
	"while"        reduce using rule 21
	"for"          reduce using rule 21
	"return"       reduce using rule 21
	Ident          reduce using rule 21


State 50

	Stmt -> StmtFor .                                   (rule 22)

	error          reduce using rule 22
	"int"          reduce using rule 22
	"double"       reduce using rule 22
	"boolean"      reduce using rule 22
	"void"         reduce using rule 22
	FalseLiteral   reduce using rule 22
	TrueLiteral    reduce using rule 22
	IntLiteral     reduce using rule 22
	DoubleLiteral  reduce using rule 22
	StringLiteral  reduce using rule 22
	"("            reduce using rule 22
	"{"            reduce using rule 22
	"}"            reduce using rule 22
	"+"            reduce using rule 22
	"-"            reduce using rule 22
	"!"            reduce using rule 22
	"if"           reduce using rule 22
	"else"         reduce using rule 22
	"while"        reduce using rule 22
	"for"          reduce using rule 22
	"return"       reduce using rule 22
	Ident          reduce using rule 22


State 51

	Stmt -> StmtReturn .                                (rule 23)

	error          reduce using rule 23
	"int"          reduce using rule 23
	"double"       reduce using rule 23
	"boolean"      reduce using rule 23
	"void"         reduce using rule 23
	FalseLiteral   reduce using rule 23
	TrueLiteral    reduce using rule 23
	IntLiteral     reduce using rule 23
	DoubleLiteral  reduce using rule 23
	StringLiteral  reduce using rule 23
	"("            reduce using rule 23
	"{"            reduce using rule 23
	"}"            reduce using rule 23
	"+"            reduce using rule 23
	"-"            reduce using rule 23
	"!"            reduce using rule 23
	"if"           reduce using rule 23
	"else"         reduce using rule 23
	"while"        reduce using rule 23
	"for"          reduce using rule 23
	"return"       reduce using rule 23
	Ident          reduce using rule 23


State 52

	Stmt -> StmtExp .                                   (rule 24)

	error          reduce using rule 24
	"int"          reduce using rule 24
	"double"       reduce using rule 24
	"boolean"      reduce using rule 24
	"void"         reduce using rule 24
	FalseLiteral   reduce using rule 24
	TrueLiteral    reduce using rule 24
	IntLiteral     reduce using rule 24
	DoubleLiteral  reduce using rule 24
	StringLiteral  reduce using rule 24
	"("            reduce using rule 24
	"{"            reduce using rule 24
	"}"            reduce using rule 24
	"+"            reduce using rule 24
	"-"            reduce using rule 24
	"!"            reduce using rule 24
	"if"           reduce using rule 24
	"else"         reduce using rule 24
	"while"        reduce using rule 24
	"for"          reduce using rule 24
	"return"       reduce using rule 24
	Ident          reduce using rule 24


State 53

	StmtDecl -> Type . DeclList ";"                     (rule 28)

	Ident          shift, and enter state 127

	DeclList       goto state 125
	Decl           goto state 126

State 54

	StmtExp -> Exp . ";"                                (rule 43)

	";"            shift, and enter state 124


State 55

	Exp -> ExpOr .                                      (rule 48)
	ExpOr -> ExpOr . "||" ExpAnd                        (rule 50)

	")"            reduce using rule 48
	","            reduce using rule 48
	";"            reduce using rule 48
	"||"           shift, and enter state 123


State 56

	ExpOr -> ExpAnd .                                   (rule 49)
	ExpAnd -> ExpAnd . "&&" ExpCompe                    (rule 52)

	")"            reduce using rule 49
	","            reduce using rule 49
	";"            reduce using rule 49
	"||"           reduce using rule 49
	"&&"           shift, and enter state 122


State 57

	ExpAnd -> ExpCompe .                                (rule 51)
	ExpCompe -> ExpCompe . "==" ExpRel                  (rule 54)
	ExpCompe -> ExpCompe . "!=" ExpRel                  (rule 55)

	")"            reduce using rule 51
	","            reduce using rule 51
	";"            reduce using rule 51
	"||"           reduce using rule 51
	"&&"           reduce using rule 51
	"=="           shift, and enter state 120
	"!="           shift, and enter state 121


State 58

	ExpCompe -> ExpRel .                                (rule 53)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 57)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 58)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 59)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 60)

	")"            reduce using rule 53
	","            reduce using rule 53
	";"            reduce using rule 53
	"||"           reduce using rule 53
	"&&"           reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	"<"            shift, and enter state 116
	">"            shift, and enter state 117
	"<="           shift, and enter state 118
	">="           shift, and enter state 119


State 59

	ExpRel -> ExpAddi .                                 (rule 56)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 62)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 63)

	")"            reduce using rule 56
	","            reduce using rule 56
	";"            reduce using rule 56
	"||"           reduce using rule 56
	"&&"           reduce using rule 56
	"=="           reduce using rule 56
	"!="           reduce using rule 56
	"<"            reduce using rule 56
	">"            reduce using rule 56
	"<="           reduce using rule 56
	">="           reduce using rule 56
	"+"            shift, and enter state 114
	"-"            shift, and enter state 115


State 60

	ExpAddi -> ExpMulti .                               (rule 61)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 65)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 66)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 67)

	")"            reduce using rule 61
	","            reduce using rule 61
	";"            reduce using rule 61
	"||"           reduce using rule 61
	"&&"           reduce using rule 61
	"=="           reduce using rule 61
	"!="           reduce using rule 61
	"<"            reduce using rule 61
	">"            reduce using rule 61
	"<="           reduce using rule 61
	">="           reduce using rule 61
	"+"            reduce using rule 61
	"-"            reduce using rule 61
	"/"            shift, and enter state 111
	"%"            shift, and enter state 112
	"*"            shift, and enter state 113


State 61

	ExpMulti -> ExpOneArg .                             (rule 64)

	")"            reduce using rule 64
	","            reduce using rule 64
	";"            reduce using rule 64
	"||"           reduce using rule 64
	"&&"           reduce using rule 64
	"=="           reduce using rule 64
	"!="           reduce using rule 64
	"<"            reduce using rule 64
	">"            reduce using rule 64
	"<="           reduce using rule 64
	">="           reduce using rule 64
	"+"            reduce using rule 64
	"-"            reduce using rule 64
	"/"            reduce using rule 64
	"%"            reduce using rule 64
	"*"            reduce using rule 64


State 62

	ExpOneArg -> ExpPostfix .                           (rule 68)

	")"            reduce using rule 68
	","            reduce using rule 68
	";"            reduce using rule 68
	"||"           reduce using rule 68
	"&&"           reduce using rule 68
	"=="           reduce using rule 68
	"!="           reduce using rule 68
	"<"            reduce using rule 68
	">"            reduce using rule 68
	"<="           reduce using rule 68
	">="           reduce using rule 68
	"+"            reduce using rule 68
	"-"            reduce using rule 68
	"/"            reduce using rule 68
	"%"            reduce using rule 68
	"*"            reduce using rule 68


State 63

	ExpPostfix -> ExpCallFunc .                         (rule 73)

	")"            reduce using rule 73
	","            reduce using rule 73
	";"            reduce using rule 73
	"||"           reduce using rule 73
	"&&"           reduce using rule 73
	"=="           reduce using rule 73
	"!="           reduce using rule 73
	"<"            reduce using rule 73
	">"            reduce using rule 73
	"<="           reduce using rule 73
	">="           reduce using rule 73
	"+"            reduce using rule 73
	"-"            reduce using rule 73
	"/"            reduce using rule 73
	"%"            reduce using rule 73
	"*"            reduce using rule 73


State 64

	ExpPostfix -> ExpSimp .                             (rule 72)

	")"            reduce using rule 72
	","            reduce using rule 72
	";"            reduce using rule 72
	"||"           reduce using rule 72
	"&&"           reduce using rule 72
	"=="           reduce using rule 72
	"!="           reduce using rule 72
	"<"            reduce using rule 72
	">"            reduce using rule 72
	"<="           reduce using rule 72
	">="           reduce using rule 72
	"+"            reduce using rule 72
	"-"            reduce using rule 72
	"/"            reduce using rule 72
	"%"            reduce using rule 72
	"*"            reduce using rule 72


State 65

	ExpSimp -> Literal .                                (rule 80)

	")"            reduce using rule 80
	","            reduce using rule 80
	";"            reduce using rule 80
	"||"           reduce using rule 80
	"&&"           reduce using rule 80
	"=="           reduce using rule 80
	"!="           reduce using rule 80
	"<"            reduce using rule 80
	">"            reduce using rule 80
	"<="           reduce using rule 80
	">="           reduce using rule 80
	"+"            reduce using rule 80
	"-"            reduce using rule 80
	"/"            reduce using rule 80
	"%"            reduce using rule 80
	"*"            reduce using rule 80


State 66

	Literal -> FalseLiteral .                           (rule 85)

	")"            reduce using rule 85
	","            reduce using rule 85
	";"            reduce using rule 85
	"||"           reduce using rule 85
	"&&"           reduce using rule 85
	"=="           reduce using rule 85
	"!="           reduce using rule 85
	"<"            reduce using rule 85
	">"            reduce using rule 85
	"<="           reduce using rule 85
	">="           reduce using rule 85
	"+"            reduce using rule 85
	"-"            reduce using rule 85
	"/"            reduce using rule 85
	"%"            reduce using rule 85
	"*"            reduce using rule 85


State 67

	Literal -> TrueLiteral .                            (rule 86)

	")"            reduce using rule 86
	","            reduce using rule 86
	";"            reduce using rule 86
	"||"           reduce using rule 86
	"&&"           reduce using rule 86
	"=="           reduce using rule 86
	"!="           reduce using rule 86
	"<"            reduce using rule 86
	">"            reduce using rule 86
	"<="           reduce using rule 86
	">="           reduce using rule 86
	"+"            reduce using rule 86
	"-"            reduce using rule 86
	"/"            reduce using rule 86
	"%"            reduce using rule 86
	"*"            reduce using rule 86


State 68

	Literal -> IntLiteral .                             (rule 82)

	")"            reduce using rule 82
	","            reduce using rule 82
	";"            reduce using rule 82
	"||"           reduce using rule 82
	"&&"           reduce using rule 82
	"=="           reduce using rule 82
	"!="           reduce using rule 82
	"<"            reduce using rule 82
	">"            reduce using rule 82
	"<="           reduce using rule 82
	">="           reduce using rule 82
	"+"            reduce using rule 82
	"-"            reduce using rule 82
	"/"            reduce using rule 82
	"%"            reduce using rule 82
	"*"            reduce using rule 82


State 69

	Literal -> DoubleLiteral .                          (rule 83)

	")"            reduce using rule 83
	","            reduce using rule 83
	";"            reduce using rule 83
	"||"           reduce using rule 83
	"&&"           reduce using rule 83
	"=="           reduce using rule 83
	"!="           reduce using rule 83
	"<"            reduce using rule 83
	">"            reduce using rule 83
	"<="           reduce using rule 83
	">="           reduce using rule 83
	"+"            reduce using rule 83
	"-"            reduce using rule 83
	"/"            reduce using rule 83
	"%"            reduce using rule 83
	"*"            reduce using rule 83


State 70

	Literal -> StringLiteral .                          (rule 84)

	")"            reduce using rule 84
	","            reduce using rule 84
	";"            reduce using rule 84
	"||"           reduce using rule 84
	"&&"           reduce using rule 84
	"=="           reduce using rule 84
	"!="           reduce using rule 84
	"<"            reduce using rule 84
	">"            reduce using rule 84
	"<="           reduce using rule 84
	">="           reduce using rule 84
	"+"            reduce using rule 84
	"-"            reduce using rule 84
	"/"            reduce using rule 84
	"%"            reduce using rule 84
	"*"            reduce using rule 84


State 71

	ExpSimp -> "(" . Exp ")"                            (rule 81)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 110
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 72

	StmtComp -> "{" . StmtList "}"                      (rule 25)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"}"            reduce using rule 27
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 42
	StmtComp       goto state 43
	StmtList       goto state 109
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 73

	ExpOneArg -> "+" . ExpOneArg                        (rule 70)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpOneArg      goto state 108
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 74

	ExpOneArg -> "-" . ExpOneArg                        (rule 71)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpOneArg      goto state 107
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 75

	ExpOneArg -> "!" . ExpOneArg                        (rule 69)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpOneArg      goto state 106
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 76

	StmtIf -> "if" . "(" Exp ")" Stmt                   (rule 37)
	StmtIf -> "if" . "(" Exp ")" Stmt "else" Stmt       (rule 38)

	"("            shift, and enter state 105


State 77

	StmtWhile -> "while" . "(" Exp ")" Stmt             (rule 39)

	"("            shift, and enter state 104


State 78

	StmtFor -> "for" . "(" Assig ";" Exp ";" Assig ")" Stmt    (rule 40)

	"("            shift, and enter state 103


State 79

	StmtReturn -> "return" . ";"                        (rule 41)
	StmtReturn -> "return" . Exp ";"                    (rule 42)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	";"            shift, and enter state 101
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 100
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 80

	Assig -> Ident . "=" Exp                            (rule 34)
	Assig -> Ident . "++"                               (rule 35)
	Assig -> Ident . "--"                               (rule 36)
	ExpCallFunc -> Ident . "(" ExpList ")"              (rule 74)
	ExpSimp -> Ident .                                  (rule 79)

	"("            shift, and enter state 96
	";"            reduce using rule 79
	"="            shift, and enter state 97
	"++"           shift, and enter state 98
	"--"           shift, and enter state 99
	"||"           reduce using rule 79
	"&&"           reduce using rule 79
	"=="           reduce using rule 79
	"!="           reduce using rule 79
	"<"            reduce using rule 79
	">"            reduce using rule 79
	"<="           reduce using rule 79
	">="           reduce using rule 79
	"+"            reduce using rule 79
	"-"            reduce using rule 79
	"/"            reduce using rule 79
	"%"            reduce using rule 79
	"*"            reduce using rule 79


State 81

	Function -> Type Ident "(" error ")" "{" StmtList . "}"    (rule 8)

	"}"            shift, and enter state 95


State 82

	Function -> Type Ident "(" FunctionArgs error "{" StmtList . "}"    (rule 9)

	"}"            shift, and enter state 94


State 83

	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList . "}"    (rule 4)
	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList . error    (rule 12)

	error          shift, and enter state 92
	"}"            shift, and enter state 93


State 84

	Function -> Type Ident "(" FunctionArgs ")" "{" error . "}"    (rule 11)

	"}"            shift, and enter state 91


State 85

	Function -> Type Ident "(" FunctionArgs ")" error StmtList . "}"    (rule 10)

	"}"            shift, and enter state 90


State 86

	Function -> Type error "(" FunctionArgs ")" "{" StmtList . "}"    (rule 6)

	"}"            shift, and enter state 89


State 87

	Function -> error Ident "(" FunctionArgs ")" "{" StmtList . "}"    (rule 5)

	"}"            shift, and enter state 88


State 88

	Function -> error Ident "(" FunctionArgs ")" "{" StmtList "}" .    (rule 5)

	error          reduce using rule 5
	"int"          reduce using rule 5
	"double"       reduce using rule 5
	"boolean"      reduce using rule 5
	"void"         reduce using rule 5
	%eof           reduce using rule 5


State 89

	Function -> Type error "(" FunctionArgs ")" "{" StmtList "}" .    (rule 6)

	error          reduce using rule 6
	"int"          reduce using rule 6
	"double"       reduce using rule 6
	"boolean"      reduce using rule 6
	"void"         reduce using rule 6
	%eof           reduce using rule 6


State 90

	Function -> Type Ident "(" FunctionArgs ")" error StmtList "}" .    (rule 10)

	error          reduce using rule 10
	"int"          reduce using rule 10
	"double"       reduce using rule 10
	"boolean"      reduce using rule 10
	"void"         reduce using rule 10
	%eof           reduce using rule 10


State 91

	Function -> Type Ident "(" FunctionArgs ")" "{" error "}" .    (rule 11)

	error          reduce using rule 11
	"int"          reduce using rule 11
	"double"       reduce using rule 11
	"boolean"      reduce using rule 11
	"void"         reduce using rule 11
	%eof           reduce using rule 11


State 92

	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList error .    (rule 12)

	error          reduce using rule 12
	"int"          reduce using rule 12
	"double"       reduce using rule 12
	"boolean"      reduce using rule 12
	"void"         reduce using rule 12
	%eof           reduce using rule 12


State 93

	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList "}" .    (rule 4)

	error          reduce using rule 4
	"int"          reduce using rule 4
	"double"       reduce using rule 4
	"boolean"      reduce using rule 4
	"void"         reduce using rule 4
	%eof           reduce using rule 4


State 94

	Function -> Type Ident "(" FunctionArgs error "{" StmtList "}" .    (rule 9)

	error          reduce using rule 9
	"int"          reduce using rule 9
	"double"       reduce using rule 9
	"boolean"      reduce using rule 9
	"void"         reduce using rule 9
	%eof           reduce using rule 9


State 95

	Function -> Type Ident "(" error ")" "{" StmtList "}" .    (rule 8)

	error          reduce using rule 8
	"int"          reduce using rule 8
	"double"       reduce using rule 8
	"boolean"      reduce using rule 8
	"void"         reduce using rule 8
	%eof           reduce using rule 8


State 96

	ExpCallFunc -> Ident "(" . ExpList ")"              (rule 74)

	error          shift, and enter state 157
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	")"            reduce using rule 77
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 155
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpList        goto state 156
	ExpSimp        goto state 64
	Literal        goto state 65

State 97

	Assig -> Ident "=" . Exp                            (rule 34)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 154
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 98

	Assig -> Ident "++" .                               (rule 35)

	")"            reduce using rule 35
	";"            reduce using rule 35


State 99

	Assig -> Ident "--" .                               (rule 36)

	")"            reduce using rule 36
	";"            reduce using rule 36


State 100

	StmtReturn -> "return" Exp . ";"                    (rule 42)

	";"            shift, and enter state 153


State 101

	StmtReturn -> "return" ";" .                        (rule 41)

	error          reduce using rule 41
	"int"          reduce using rule 41
	"double"       reduce using rule 41
	"boolean"      reduce using rule 41
	"void"         reduce using rule 41
	FalseLiteral   reduce using rule 41
	TrueLiteral    reduce using rule 41
	IntLiteral     reduce using rule 41
	DoubleLiteral  reduce using rule 41
	StringLiteral  reduce using rule 41
	"("            reduce using rule 41
	"{"            reduce using rule 41
	"}"            reduce using rule 41
	"+"            reduce using rule 41
	"-"            reduce using rule 41
	"!"            reduce using rule 41
	"if"           reduce using rule 41
	"else"         reduce using rule 41
	"while"        reduce using rule 41
	"for"          reduce using rule 41
	"return"       reduce using rule 41
	Ident          reduce using rule 41


State 102

	ExpCallFunc -> Ident . "(" ExpList ")"              (rule 74)
	ExpSimp -> Ident .                                  (rule 79)

	"("            shift, and enter state 96
	")"            reduce using rule 79
	","            reduce using rule 79
	";"            reduce using rule 79
	"||"           reduce using rule 79
	"&&"           reduce using rule 79
	"=="           reduce using rule 79
	"!="           reduce using rule 79
	"<"            reduce using rule 79
	">"            reduce using rule 79
	"<="           reduce using rule 79
	">="           reduce using rule 79
	"+"            reduce using rule 79
	"-"            reduce using rule 79
	"/"            reduce using rule 79
	"%"            reduce using rule 79
	"*"            reduce using rule 79


State 103

	StmtFor -> "for" "(" . Assig ";" Exp ";" Assig ")" Stmt    (rule 40)

	Ident          shift, and enter state 152

	Assig          goto state 151

State 104

	StmtWhile -> "while" "(" . Exp ")" Stmt             (rule 39)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 150
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 105

	StmtIf -> "if" "(" . Exp ")" Stmt                   (rule 37)
	StmtIf -> "if" "(" . Exp ")" Stmt "else" Stmt       (rule 38)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 149
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 106

	ExpOneArg -> "!" ExpOneArg .                        (rule 69)

	")"            reduce using rule 69
	","            reduce using rule 69
	";"            reduce using rule 69
	"||"           reduce using rule 69
	"&&"           reduce using rule 69
	"=="           reduce using rule 69
	"!="           reduce using rule 69
	"<"            reduce using rule 69
	">"            reduce using rule 69
	"<="           reduce using rule 69
	">="           reduce using rule 69
	"+"            reduce using rule 69
	"-"            reduce using rule 69
	"/"            reduce using rule 69
	"%"            reduce using rule 69
	"*"            reduce using rule 69


State 107

	ExpOneArg -> "-" ExpOneArg .                        (rule 71)

	")"            reduce using rule 71
	","            reduce using rule 71
	";"            reduce using rule 71
	"||"           reduce using rule 71
	"&&"           reduce using rule 71
	"=="           reduce using rule 71
	"!="           reduce using rule 71
	"<"            reduce using rule 71
	">"            reduce using rule 71
	"<="           reduce using rule 71
	">="           reduce using rule 71
	"+"            reduce using rule 71
	"-"            reduce using rule 71
	"/"            reduce using rule 71
	"%"            reduce using rule 71
	"*"            reduce using rule 71


State 108

	ExpOneArg -> "+" ExpOneArg .                        (rule 70)

	")"            reduce using rule 70
	","            reduce using rule 70
	";"            reduce using rule 70
	"||"           reduce using rule 70
	"&&"           reduce using rule 70
	"=="           reduce using rule 70
	"!="           reduce using rule 70
	"<"            reduce using rule 70
	">"            reduce using rule 70
	"<="           reduce using rule 70
	">="           reduce using rule 70
	"+"            reduce using rule 70
	"-"            reduce using rule 70
	"/"            reduce using rule 70
	"%"            reduce using rule 70
	"*"            reduce using rule 70


State 109

	StmtComp -> "{" StmtList . "}"                      (rule 25)

	"}"            shift, and enter state 148


State 110

	ExpSimp -> "(" Exp . ")"                            (rule 81)

	")"            shift, and enter state 147


State 111

	ExpMulti -> ExpMulti "/" . ExpOneArg                (rule 66)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpOneArg      goto state 146
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 112

	ExpMulti -> ExpMulti "%" . ExpOneArg                (rule 67)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpOneArg      goto state 145
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 113

	ExpMulti -> ExpMulti "*" . ExpOneArg                (rule 65)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpOneArg      goto state 144
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 114

	ExpAddi -> ExpAddi "+" . ExpMulti                   (rule 62)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpMulti       goto state 143
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 115

	ExpAddi -> ExpAddi "-" . ExpMulti                   (rule 63)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpMulti       goto state 142
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 116

	ExpRel -> ExpRel "<" . ExpAddi                      (rule 57)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpAddi        goto state 141
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 117

	ExpRel -> ExpRel ">" . ExpAddi                      (rule 58)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpAddi        goto state 140
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 118

	ExpRel -> ExpRel "<=" . ExpAddi                     (rule 59)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpAddi        goto state 139
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 119

	ExpRel -> ExpRel ">=" . ExpAddi                     (rule 60)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpAddi        goto state 138
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 120

	ExpCompe -> ExpCompe "==" . ExpRel                  (rule 54)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpRel         goto state 137
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 121

	ExpCompe -> ExpCompe "!=" . ExpRel                  (rule 55)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpRel         goto state 136
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 122

	ExpAnd -> ExpAnd "&&" . ExpCompe                    (rule 52)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpCompe       goto state 135
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 123

	ExpOr -> ExpOr "||" . ExpAnd                        (rule 50)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	ExpAnd         goto state 134
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 124

	StmtExp -> Exp ";" .                                (rule 43)

	error          reduce using rule 43
	"int"          reduce using rule 43
	"double"       reduce using rule 43
	"boolean"      reduce using rule 43
	"void"         reduce using rule 43
	FalseLiteral   reduce using rule 43
	TrueLiteral    reduce using rule 43
	IntLiteral     reduce using rule 43
	DoubleLiteral  reduce using rule 43
	StringLiteral  reduce using rule 43
	"("            reduce using rule 43
	"{"            reduce using rule 43
	"}"            reduce using rule 43
	"+"            reduce using rule 43
	"-"            reduce using rule 43
	"!"            reduce using rule 43
	"if"           reduce using rule 43
	"else"         reduce using rule 43
	"while"        reduce using rule 43
	"for"          reduce using rule 43
	"return"       reduce using rule 43
	Ident          reduce using rule 43


State 125

	StmtDecl -> Type DeclList . ";"                     (rule 28)

	";"            shift, and enter state 133


State 126

	DeclList -> Decl .                                  (rule 29)
	DeclList -> Decl . "," DeclList                     (rule 30)

	","            shift, and enter state 132
	";"            reduce using rule 29


State 127

	Decl -> Ident .                                     (rule 31)
	Decl -> Ident . "=" Exp                             (rule 32)

	","            reduce using rule 31
	";"            reduce using rule 31
	"="            shift, and enter state 131


State 128

	StmtAssig -> Assig ";" .                            (rule 33)

	error          reduce using rule 33
	"int"          reduce using rule 33
	"double"       reduce using rule 33
	"boolean"      reduce using rule 33
	"void"         reduce using rule 33
	FalseLiteral   reduce using rule 33
	TrueLiteral    reduce using rule 33
	IntLiteral     reduce using rule 33
	DoubleLiteral  reduce using rule 33
	StringLiteral  reduce using rule 33
	"("            reduce using rule 33
	"{"            reduce using rule 33
	"}"            reduce using rule 33
	"+"            reduce using rule 33
	"-"            reduce using rule 33
	"!"            reduce using rule 33
	"if"           reduce using rule 33
	"else"         reduce using rule 33
	"while"        reduce using rule 33
	"for"          reduce using rule 33
	"return"       reduce using rule 33
	Ident          reduce using rule 33


State 129

	Function -> Type Ident error FunctionArgs ")" "{" StmtList "}" .    (rule 7)

	error          reduce using rule 7
	"int"          reduce using rule 7
	"double"       reduce using rule 7
	"boolean"      reduce using rule 7
	"void"         reduce using rule 7
	%eof           reduce using rule 7


State 130

	StmtList -> Stmt StmtList .                         (rule 26)

	error          reduce using rule 26
	"}"            reduce using rule 26


State 131

	Decl -> Ident "=" . Exp                             (rule 32)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 164
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 132

	DeclList -> Decl "," . DeclList                     (rule 30)

	Ident          shift, and enter state 127

	DeclList       goto state 163
	Decl           goto state 126

State 133

	StmtDecl -> Type DeclList ";" .                     (rule 28)

	error          reduce using rule 28
	"int"          reduce using rule 28
	"double"       reduce using rule 28
	"boolean"      reduce using rule 28
	"void"         reduce using rule 28
	FalseLiteral   reduce using rule 28
	TrueLiteral    reduce using rule 28
	IntLiteral     reduce using rule 28
	DoubleLiteral  reduce using rule 28
	StringLiteral  reduce using rule 28
	"("            reduce using rule 28
	"{"            reduce using rule 28
	"}"            reduce using rule 28
	"+"            reduce using rule 28
	"-"            reduce using rule 28
	"!"            reduce using rule 28
	"if"           reduce using rule 28
	"else"         reduce using rule 28
	"while"        reduce using rule 28
	"for"          reduce using rule 28
	"return"       reduce using rule 28
	Ident          reduce using rule 28


State 134

	ExpOr -> ExpOr "||" ExpAnd .                        (rule 50)
	ExpAnd -> ExpAnd . "&&" ExpCompe                    (rule 52)

	")"            reduce using rule 50
	","            reduce using rule 50
	";"            reduce using rule 50
	"||"           reduce using rule 50
	"&&"           shift, and enter state 122


State 135

	ExpAnd -> ExpAnd "&&" ExpCompe .                    (rule 52)
	ExpCompe -> ExpCompe . "==" ExpRel                  (rule 54)
	ExpCompe -> ExpCompe . "!=" ExpRel                  (rule 55)

	")"            reduce using rule 52
	","            reduce using rule 52
	";"            reduce using rule 52
	"||"           reduce using rule 52
	"&&"           reduce using rule 52
	"=="           shift, and enter state 120
	"!="           shift, and enter state 121


State 136

	ExpCompe -> ExpCompe "!=" ExpRel .                  (rule 55)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 57)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 58)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 59)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 60)

	")"            reduce using rule 55
	","            reduce using rule 55
	";"            reduce using rule 55
	"||"           reduce using rule 55
	"&&"           reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"<"            shift, and enter state 116
	">"            shift, and enter state 117
	"<="           shift, and enter state 118
	">="           shift, and enter state 119


State 137

	ExpCompe -> ExpCompe "==" ExpRel .                  (rule 54)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 57)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 58)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 59)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 60)

	")"            reduce using rule 54
	","            reduce using rule 54
	";"            reduce using rule 54
	"||"           reduce using rule 54
	"&&"           reduce using rule 54
	"=="           reduce using rule 54
	"!="           reduce using rule 54
	"<"            shift, and enter state 116
	">"            shift, and enter state 117
	"<="           shift, and enter state 118
	">="           shift, and enter state 119


State 138

	ExpRel -> ExpRel ">=" ExpAddi .                     (rule 60)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 62)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 63)

	")"            reduce using rule 60
	","            reduce using rule 60
	";"            reduce using rule 60
	"||"           reduce using rule 60
	"&&"           reduce using rule 60
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"<"            reduce using rule 60
	">"            reduce using rule 60
	"<="           reduce using rule 60
	">="           reduce using rule 60
	"+"            shift, and enter state 114
	"-"            shift, and enter state 115


State 139

	ExpRel -> ExpRel "<=" ExpAddi .                     (rule 59)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 62)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 63)

	")"            reduce using rule 59
	","            reduce using rule 59
	";"            reduce using rule 59
	"||"           reduce using rule 59
	"&&"           reduce using rule 59
	"=="           reduce using rule 59
	"!="           reduce using rule 59
	"<"            reduce using rule 59
	">"            reduce using rule 59
	"<="           reduce using rule 59
	">="           reduce using rule 59
	"+"            shift, and enter state 114
	"-"            shift, and enter state 115


State 140

	ExpRel -> ExpRel ">" ExpAddi .                      (rule 58)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 62)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 63)

	")"            reduce using rule 58
	","            reduce using rule 58
	";"            reduce using rule 58
	"||"           reduce using rule 58
	"&&"           reduce using rule 58
	"=="           reduce using rule 58
	"!="           reduce using rule 58
	"<"            reduce using rule 58
	">"            reduce using rule 58
	"<="           reduce using rule 58
	">="           reduce using rule 58
	"+"            shift, and enter state 114
	"-"            shift, and enter state 115


State 141

	ExpRel -> ExpRel "<" ExpAddi .                      (rule 57)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 62)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 63)

	")"            reduce using rule 57
	","            reduce using rule 57
	";"            reduce using rule 57
	"||"           reduce using rule 57
	"&&"           reduce using rule 57
	"=="           reduce using rule 57
	"!="           reduce using rule 57
	"<"            reduce using rule 57
	">"            reduce using rule 57
	"<="           reduce using rule 57
	">="           reduce using rule 57
	"+"            shift, and enter state 114
	"-"            shift, and enter state 115


State 142

	ExpAddi -> ExpAddi "-" ExpMulti .                   (rule 63)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 65)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 66)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 67)

	")"            reduce using rule 63
	","            reduce using rule 63
	";"            reduce using rule 63
	"||"           reduce using rule 63
	"&&"           reduce using rule 63
	"=="           reduce using rule 63
	"!="           reduce using rule 63
	"<"            reduce using rule 63
	">"            reduce using rule 63
	"<="           reduce using rule 63
	">="           reduce using rule 63
	"+"            reduce using rule 63
	"-"            reduce using rule 63
	"/"            shift, and enter state 111
	"%"            shift, and enter state 112
	"*"            shift, and enter state 113


State 143

	ExpAddi -> ExpAddi "+" ExpMulti .                   (rule 62)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 65)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 66)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 67)

	")"            reduce using rule 62
	","            reduce using rule 62
	";"            reduce using rule 62
	"||"           reduce using rule 62
	"&&"           reduce using rule 62
	"=="           reduce using rule 62
	"!="           reduce using rule 62
	"<"            reduce using rule 62
	">"            reduce using rule 62
	"<="           reduce using rule 62
	">="           reduce using rule 62
	"+"            reduce using rule 62
	"-"            reduce using rule 62
	"/"            shift, and enter state 111
	"%"            shift, and enter state 112
	"*"            shift, and enter state 113


State 144

	ExpMulti -> ExpMulti "*" ExpOneArg .                (rule 65)

	")"            reduce using rule 65
	","            reduce using rule 65
	";"            reduce using rule 65
	"||"           reduce using rule 65
	"&&"           reduce using rule 65
	"=="           reduce using rule 65
	"!="           reduce using rule 65
	"<"            reduce using rule 65
	">"            reduce using rule 65
	"<="           reduce using rule 65
	">="           reduce using rule 65
	"+"            reduce using rule 65
	"-"            reduce using rule 65
	"/"            reduce using rule 65
	"%"            reduce using rule 65
	"*"            reduce using rule 65


State 145

	ExpMulti -> ExpMulti "%" ExpOneArg .                (rule 67)

	")"            reduce using rule 67
	","            reduce using rule 67
	";"            reduce using rule 67
	"||"           reduce using rule 67
	"&&"           reduce using rule 67
	"=="           reduce using rule 67
	"!="           reduce using rule 67
	"<"            reduce using rule 67
	">"            reduce using rule 67
	"<="           reduce using rule 67
	">="           reduce using rule 67
	"+"            reduce using rule 67
	"-"            reduce using rule 67
	"/"            reduce using rule 67
	"%"            reduce using rule 67
	"*"            reduce using rule 67


State 146

	ExpMulti -> ExpMulti "/" ExpOneArg .                (rule 66)

	")"            reduce using rule 66
	","            reduce using rule 66
	";"            reduce using rule 66
	"||"           reduce using rule 66
	"&&"           reduce using rule 66
	"=="           reduce using rule 66
	"!="           reduce using rule 66
	"<"            reduce using rule 66
	">"            reduce using rule 66
	"<="           reduce using rule 66
	">="           reduce using rule 66
	"+"            reduce using rule 66
	"-"            reduce using rule 66
	"/"            reduce using rule 66
	"%"            reduce using rule 66
	"*"            reduce using rule 66


State 147

	ExpSimp -> "(" Exp ")" .                            (rule 81)

	")"            reduce using rule 81
	","            reduce using rule 81
	";"            reduce using rule 81
	"||"           reduce using rule 81
	"&&"           reduce using rule 81
	"=="           reduce using rule 81
	"!="           reduce using rule 81
	"<"            reduce using rule 81
	">"            reduce using rule 81
	"<="           reduce using rule 81
	">="           reduce using rule 81
	"+"            reduce using rule 81
	"-"            reduce using rule 81
	"/"            reduce using rule 81
	"%"            reduce using rule 81
	"*"            reduce using rule 81


State 148

	StmtComp -> "{" StmtList "}" .                      (rule 25)

	error          reduce using rule 25
	"int"          reduce using rule 25
	"double"       reduce using rule 25
	"boolean"      reduce using rule 25
	"void"         reduce using rule 25
	FalseLiteral   reduce using rule 25
	TrueLiteral    reduce using rule 25
	IntLiteral     reduce using rule 25
	DoubleLiteral  reduce using rule 25
	StringLiteral  reduce using rule 25
	"("            reduce using rule 25
	"{"            reduce using rule 25
	"}"            reduce using rule 25
	"+"            reduce using rule 25
	"-"            reduce using rule 25
	"!"            reduce using rule 25
	"if"           reduce using rule 25
	"else"         reduce using rule 25
	"while"        reduce using rule 25
	"for"          reduce using rule 25
	"return"       reduce using rule 25
	Ident          reduce using rule 25


State 149

	StmtIf -> "if" "(" Exp . ")" Stmt                   (rule 37)
	StmtIf -> "if" "(" Exp . ")" Stmt "else" Stmt       (rule 38)

	")"            shift, and enter state 162


State 150

	StmtWhile -> "while" "(" Exp . ")" Stmt             (rule 39)

	")"            shift, and enter state 161


State 151

	StmtFor -> "for" "(" Assig . ";" Exp ";" Assig ")" Stmt    (rule 40)

	";"            shift, and enter state 160


State 152

	Assig -> Ident . "=" Exp                            (rule 34)
	Assig -> Ident . "++"                               (rule 35)
	Assig -> Ident . "--"                               (rule 36)

	"="            shift, and enter state 97
	"++"           shift, and enter state 98
	"--"           shift, and enter state 99


State 153

	StmtReturn -> "return" Exp ";" .                    (rule 42)

	error          reduce using rule 42
	"int"          reduce using rule 42
	"double"       reduce using rule 42
	"boolean"      reduce using rule 42
	"void"         reduce using rule 42
	FalseLiteral   reduce using rule 42
	TrueLiteral    reduce using rule 42
	IntLiteral     reduce using rule 42
	DoubleLiteral  reduce using rule 42
	StringLiteral  reduce using rule 42
	"("            reduce using rule 42
	"{"            reduce using rule 42
	"}"            reduce using rule 42
	"+"            reduce using rule 42
	"-"            reduce using rule 42
	"!"            reduce using rule 42
	"if"           reduce using rule 42
	"else"         reduce using rule 42
	"while"        reduce using rule 42
	"for"          reduce using rule 42
	"return"       reduce using rule 42
	Ident          reduce using rule 42


State 154

	Assig -> Ident "=" Exp .                            (rule 34)

	")"            reduce using rule 34
	";"            reduce using rule 34


State 155

	ExpList -> Exp .                                    (rule 75)
	ExpList -> Exp . "," ExpList                        (rule 76)

	")"            reduce using rule 75
	","            shift, and enter state 159


State 156

	ExpCallFunc -> Ident "(" ExpList . ")"              (rule 74)

	")"            shift, and enter state 158


State 157

	ExpList -> error .                                  (rule 78)

	")"            reduce using rule 78


State 158

	ExpCallFunc -> Ident "(" ExpList ")" .              (rule 74)

	")"            reduce using rule 74
	","            reduce using rule 74
	";"            reduce using rule 74
	"||"           reduce using rule 74
	"&&"           reduce using rule 74
	"=="           reduce using rule 74
	"!="           reduce using rule 74
	"<"            reduce using rule 74
	">"            reduce using rule 74
	"<="           reduce using rule 74
	">="           reduce using rule 74
	"+"            reduce using rule 74
	"-"            reduce using rule 74
	"/"            reduce using rule 74
	"%"            reduce using rule 74
	"*"            reduce using rule 74


State 159

	ExpList -> Exp "," . ExpList                        (rule 76)

	error          shift, and enter state 157
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	")"            reduce using rule 77
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 155
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpList        goto state 168
	ExpSimp        goto state 64
	Literal        goto state 65

State 160

	StmtFor -> "for" "(" Assig ";" . Exp ";" Assig ")" Stmt    (rule 40)

	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	Ident          shift, and enter state 102

	Exp            goto state 167
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 161

	StmtWhile -> "while" "(" Exp ")" . Stmt             (rule 39)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 166
	StmtComp       goto state 43
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 162

	StmtIf -> "if" "(" Exp ")" . Stmt                   (rule 37)
	StmtIf -> "if" "(" Exp ")" . Stmt "else" Stmt       (rule 38)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 165
	StmtComp       goto state 43
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 163

	DeclList -> Decl "," DeclList .                     (rule 30)

	";"            reduce using rule 30


State 164

	Decl -> Ident "=" Exp .                             (rule 32)

	","            reduce using rule 32
	";"            reduce using rule 32


State 165

	StmtIf -> "if" "(" Exp ")" Stmt .                   (rule 37)
	StmtIf -> "if" "(" Exp ")" Stmt . "else" Stmt       (rule 38)

	error          reduce using rule 37
	"int"          reduce using rule 37
	"double"       reduce using rule 37
	"boolean"      reduce using rule 37
	"void"         reduce using rule 37
	FalseLiteral   reduce using rule 37
	TrueLiteral    reduce using rule 37
	IntLiteral     reduce using rule 37
	DoubleLiteral  reduce using rule 37
	StringLiteral  reduce using rule 37
	"("            reduce using rule 37
	"{"            reduce using rule 37
	"}"            reduce using rule 37
	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"!"            reduce using rule 37
	"if"           reduce using rule 37
	"else"         shift, and enter state 170
			(reduce using rule 37)

	"while"        reduce using rule 37
	"for"          reduce using rule 37
	"return"       reduce using rule 37
	Ident          reduce using rule 37


State 166

	StmtWhile -> "while" "(" Exp ")" Stmt .             (rule 39)

	error          reduce using rule 39
	"int"          reduce using rule 39
	"double"       reduce using rule 39
	"boolean"      reduce using rule 39
	"void"         reduce using rule 39
	FalseLiteral   reduce using rule 39
	TrueLiteral    reduce using rule 39
	IntLiteral     reduce using rule 39
	DoubleLiteral  reduce using rule 39
	StringLiteral  reduce using rule 39
	"("            reduce using rule 39
	"{"            reduce using rule 39
	"}"            reduce using rule 39
	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"!"            reduce using rule 39
	"if"           reduce using rule 39
	"else"         reduce using rule 39
	"while"        reduce using rule 39
	"for"          reduce using rule 39
	"return"       reduce using rule 39
	Ident          reduce using rule 39


State 167

	StmtFor -> "for" "(" Assig ";" Exp . ";" Assig ")" Stmt    (rule 40)

	";"            shift, and enter state 169


State 168

	ExpList -> Exp "," ExpList .                        (rule 76)

	")"            reduce using rule 76


State 169

	StmtFor -> "for" "(" Assig ";" Exp ";" . Assig ")" Stmt    (rule 40)

	Ident          shift, and enter state 152

	Assig          goto state 172

State 170

	StmtIf -> "if" "(" Exp ")" Stmt "else" . Stmt       (rule 38)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 171
	StmtComp       goto state 43
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 171

	StmtIf -> "if" "(" Exp ")" Stmt "else" Stmt .       (rule 38)

	error          reduce using rule 38
	"int"          reduce using rule 38
	"double"       reduce using rule 38
	"boolean"      reduce using rule 38
	"void"         reduce using rule 38
	FalseLiteral   reduce using rule 38
	TrueLiteral    reduce using rule 38
	IntLiteral     reduce using rule 38
	DoubleLiteral  reduce using rule 38
	StringLiteral  reduce using rule 38
	"("            reduce using rule 38
	"{"            reduce using rule 38
	"}"            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"!"            reduce using rule 38
	"if"           reduce using rule 38
	"else"         reduce using rule 38
	"while"        reduce using rule 38
	"for"          reduce using rule 38
	"return"       reduce using rule 38
	Ident          reduce using rule 38


State 172

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig . ")" Stmt    (rule 40)

	")"            shift, and enter state 173


State 173

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" . Stmt    (rule 40)

	"int"          shift, and enter state 6
	"double"       shift, and enter state 7
	"boolean"      shift, and enter state 8
	"void"         shift, and enter state 9
	FalseLiteral   shift, and enter state 66
	TrueLiteral    shift, and enter state 67
	IntLiteral     shift, and enter state 68
	DoubleLiteral  shift, and enter state 69
	StringLiteral  shift, and enter state 70
	"("            shift, and enter state 71
	"{"            shift, and enter state 72
	"+"            shift, and enter state 73
	"-"            shift, and enter state 74
	"!"            shift, and enter state 75
	"if"           shift, and enter state 76
	"while"        shift, and enter state 77
	"for"          shift, and enter state 78
	"return"       shift, and enter state 79
	Ident          shift, and enter state 80

	Stmt           goto state 174
	StmtComp       goto state 43
	StmtDecl       goto state 45
	StmtAssig      goto state 46
	Assig          goto state 47
	StmtIf         goto state 48
	StmtWhile      goto state 49
	StmtFor        goto state 50
	StmtReturn     goto state 51
	StmtExp        goto state 52
	Type           goto state 53
	Exp            goto state 54
	ExpOr          goto state 55
	ExpAnd         goto state 56
	ExpCompe       goto state 57
	ExpRel         goto state 58
	ExpAddi        goto state 59
	ExpMulti       goto state 60
	ExpOneArg      goto state 61
	ExpPostfix     goto state 62
	ExpCallFunc    goto state 63
	ExpSimp        goto state 64
	Literal        goto state 65

State 174

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" Stmt .    (rule 40)

	error          reduce using rule 40
	"int"          reduce using rule 40
	"double"       reduce using rule 40
	"boolean"      reduce using rule 40
	"void"         reduce using rule 40
	FalseLiteral   reduce using rule 40
	TrueLiteral    reduce using rule 40
	IntLiteral     reduce using rule 40
	DoubleLiteral  reduce using rule 40
	StringLiteral  reduce using rule 40
	"("            reduce using rule 40
	"{"            reduce using rule 40
	"}"            reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"!"            reduce using rule 40
	"if"           reduce using rule 40
	"else"         reduce using rule 40
	"while"        reduce using rule 40
	"for"          reduce using rule 40
	"return"       reduce using rule 40
	Ident          reduce using rule 40


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 87
Number of terminals: 38
Number of non-terminals: 33
Number of states: 175
