-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.5 from JavaletteParser.y
-----------------------------------------------------------------------------

state 43 contains 1 shift/reduce conflicts.
state 139 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_javaletteParse -> Program                   (0)
	Program -> FunctionList                            (1)
	FunctionList -> Function FunctionList              (2)
	FunctionList ->                                    (3)
	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList "}"   (4)
	FunctionArgs -> FunctionArg                        (5)
	FunctionArgs -> FunctionArg "," FunctionArgs       (6)
	FunctionArgs ->                                    (7)
	FunctionArg -> Type Ident                          (8)
	Stmt -> StmtComp                                   (9)
	Stmt -> StmtDecl                                   (10)
	Stmt -> StmtAssig                                  (11)
	Stmt -> StmtIf                                     (12)
	Stmt -> StmtWhile                                  (13)
	Stmt -> StmtFor                                    (14)
	Stmt -> StmtReturn                                 (15)
	Stmt -> StmtExp                                    (16)
	StmtComp -> "{" StmtList "}"                       (17)
	StmtList -> Stmt StmtList                          (18)
	StmtList ->                                        (19)
	StmtDecl -> Type DeclList ";"                      (20)
	DeclList -> Decl                                   (21)
	DeclList -> Decl "," DeclList                      (22)
	Decl -> Ident                                      (23)
	Decl -> Ident "=" Exp                              (24)
	StmtAssig -> ExpAssig ";"                          (25)
	StmtIf -> "if" "(" Exp ")" Stmt                    (26)
	StmtIf -> "if" "(" Exp ")" Stmt "else" Stmt        (27)
	StmtWhile -> "while" "(" Exp ")" Stmt              (28)
	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" Stmt   (29)
	StmtReturn -> "return" ";"                         (30)
	StmtReturn -> "return" Exp ";"                     (31)
	StmtExp -> Exp ";"                                 (32)
	Type -> "int"                                      (33)
	Type -> "double"                                   (34)
	Type -> "boolean"                                  (35)
	Type -> "void"                                     (36)
	Exp -> ExpOr                                       (37)
	ExpOr -> ExpAnd                                    (38)
	ExpOr -> ExpOr "||" ExpAnd                         (39)
	ExpAnd -> ExpCompe                                 (40)
	ExpAnd -> ExpAnd "&&" ExpCompe                     (41)
	ExpCompe -> ExpRel                                 (42)
	ExpCompe -> ExpCompe "==" ExpRel                   (43)
	ExpCompe -> ExpCompe "!=" ExpRel                   (44)
	ExpRel -> ExpAddi                                  (45)
	ExpRel -> ExpRel "<" ExpAddi                       (46)
	ExpRel -> ExpRel ">" ExpAddi                       (47)
	ExpRel -> ExpRel "<=" ExpAddi                      (48)
	ExpRel -> ExpRel ">=" ExpAddi                      (49)
	ExpAddi -> ExpMulti                                (50)
	ExpAddi -> ExpAddi "+" ExpMulti                    (51)
	ExpAddi -> ExpAddi "-" ExpMulti                    (52)
	ExpMulti -> ExpOneArg                              (53)
	ExpMulti -> ExpMulti "*" ExpOneArg                 (54)
	ExpMulti -> ExpMulti "/" ExpOneArg                 (55)
	ExpMulti -> ExpMulti "%" ExpOneArg                 (56)
	ExpOneArg -> ExpPostfix                            (57)
	ExpOneArg -> "!" ExpOneArg                         (58)
	ExpOneArg -> "+" ExpOneArg                         (59)
	ExpOneArg -> "-" ExpOneArg                         (60)
	ExpPostfix -> ExpSimp                              (61)
	ExpPostfix -> ExpCallFunc                          (62)
	ExpCallFunc -> Ident "(" ExpList ")"               (63)
	ExpList -> Exp                                     (64)
	ExpList -> Exp "," ExpList                         (65)
	ExpList ->                                         (66)
	ExpSimp -> Ident                                   (67)
	ExpSimp -> Literal                                 (68)
	ExpSimp -> "(" Exp ")"                             (69)
	ExpSimp -> "(" "boolean" ")" ExpSimp               (70)
	ExpSimp -> "(" "int" ")" ExpSimp                   (71)
	ExpSimp -> "(" "double" ")" ExpSimp                (72)
	ExpSimp -> ExpAssig                                (73)
	ExpAssig -> Assig                                  (74)
	Assig -> Ident "=" ExpSimp                         (75)
	Assig -> Ident "++"                                (76)
	Assig -> Ident "--"                                (77)
	Literal -> IntLiteral                              (78)
	Literal -> DoubleLiteral                           (79)
	Literal -> StringLiteral                           (80)
	Literal -> FalseLiteral                            (81)
	Literal -> TrueLiteral                             (82)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"int"          { Pos _ TInt }
	"double"       { Pos _ TDouble }
	"boolean"      { Pos _ TBoolean }
	"void"         { Pos _ TVoid }
	FalseLiteral   { Pos _ TFalseLiteral }
	TrueLiteral    { Pos _ TTrueLiteral }
	IntLiteral     { Pos _ (TIntLiteral _) }
	DoubleLiteral  { Pos _ (TDoubleLiteral _) }
	StringLiteral  { Pos _ (TStringLiteral _) }
	"("            { Pos _ TLeftParen }
	")"            { Pos _ TRightParen }
	"{"            { Pos _ TLeftBrace }
	"}"            { Pos _ TRightBrace }
	","            { Pos _ TComma }
	";"            { Pos _ TSemicolon }
	"="            { Pos _ TAssignSign }
	"++"           { Pos _ TIncrement }
	"--"           { Pos _ TDecrement }
	"||"           { Pos _ TOr }
	"&&"           { Pos _ TAnd }
	"=="           { Pos _ TEqualsSign }
	"!="           { Pos _ TNotEqualsSign }
	"<"            { Pos _ TLessSign }
	">"            { Pos _ TGreaterSign }
	"<="           { Pos _ TLeOrEqSign }
	">="           { Pos _ TGrOrEqSign }
	"+"            { Pos _ TPlusSign }
	"-"            { Pos _ TMinusSign }
	"/"            { Pos _ TDivSign }
	"%"            { Pos _ TModSign }
	"*"            { Pos _ TMultiSign }
	"!"            { Pos _ TNot }
	"if"           { Pos _ TIf }
	"else"         { Pos _ TElse }
	"while"        { Pos _ TWhile }
	"for"          { Pos _ TFor }
	"return"       { Pos _ TReturn }
	Ident          { Pos _ (TIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_javaletteParse rule  0
	Program         rule  1
	FunctionList    rules 2, 3
	Function        rule  4
	FunctionArgs    rules 5, 6, 7
	FunctionArg     rule  8
	Stmt            rules 9, 10, 11, 12, 13, 14, 15, 16
	StmtComp        rule  17
	StmtList        rules 18, 19
	StmtDecl        rule  20
	DeclList        rules 21, 22
	Decl            rules 23, 24
	StmtAssig       rule  25
	StmtIf          rules 26, 27
	StmtWhile       rule  28
	StmtFor         rule  29
	StmtReturn      rules 30, 31
	StmtExp         rule  32
	Type            rules 33, 34, 35, 36
	Exp             rule  37
	ExpOr           rules 38, 39
	ExpAnd          rules 40, 41
	ExpCompe        rules 42, 43, 44
	ExpRel          rules 45, 46, 47, 48, 49
	ExpAddi         rules 50, 51, 52
	ExpMulti        rules 53, 54, 55, 56
	ExpOneArg       rules 57, 58, 59, 60
	ExpPostfix      rules 61, 62
	ExpCallFunc     rule  63
	ExpList         rules 64, 65, 66
	ExpSimp         rules 67, 68, 69, 70, 71, 72, 73
	ExpAssig        rule  74
	Assig           rules 75, 76, 77
	Literal         rules 78, 79, 80, 81, 82

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	%eof           reduce using rule 3

	Program        goto state 9
	FunctionList   goto state 2
	Function       goto state 3
	Type           goto state 4

State 1


	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8

	FunctionList   goto state 2
	Function       goto state 3
	Type           goto state 4

State 2

	Program -> FunctionList .                           (rule 1)

	%eof           reduce using rule 1


State 3

	FunctionList -> Function . FunctionList             (rule 2)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	%eof           reduce using rule 3

	FunctionList   goto state 11
	Function       goto state 3
	Type           goto state 4

State 4

	Function -> Type . Ident "(" FunctionArgs ")" "{" StmtList "}"    (rule 4)

	Ident          shift, and enter state 10


State 5

	Type -> "int" .                                     (rule 33)

	Ident          reduce using rule 33


State 6

	Type -> "double" .                                  (rule 34)

	Ident          reduce using rule 34


State 7

	Type -> "boolean" .                                 (rule 35)

	Ident          reduce using rule 35


State 8

	Type -> "void" .                                    (rule 36)

	Ident          reduce using rule 36


State 9

	%start_javaletteParse -> Program .                  (rule 0)

	%eof           accept


State 10

	Function -> Type Ident . "(" FunctionArgs ")" "{" StmtList "}"    (rule 4)

	"("            shift, and enter state 12


State 11

	FunctionList -> Function FunctionList .             (rule 2)

	%eof           reduce using rule 2


State 12

	Function -> Type Ident "(" . FunctionArgs ")" "{" StmtList "}"    (rule 4)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	")"            reduce using rule 7

	FunctionArgs   goto state 13
	FunctionArg    goto state 14
	Type           goto state 15

State 13

	Function -> Type Ident "(" FunctionArgs . ")" "{" StmtList "}"    (rule 4)

	")"            shift, and enter state 18


State 14

	FunctionArgs -> FunctionArg .                       (rule 5)
	FunctionArgs -> FunctionArg . "," FunctionArgs      (rule 6)

	")"            reduce using rule 5
	","            shift, and enter state 17


State 15

	FunctionArg -> Type . Ident                         (rule 8)

	Ident          shift, and enter state 16


State 16

	FunctionArg -> Type Ident .                         (rule 8)

	")"            reduce using rule 8
	","            reduce using rule 8


State 17

	FunctionArgs -> FunctionArg "," . FunctionArgs      (rule 6)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	")"            reduce using rule 7

	FunctionArgs   goto state 20
	FunctionArg    goto state 14
	Type           goto state 15

State 18

	Function -> Type Ident "(" FunctionArgs ")" . "{" StmtList "}"    (rule 4)

	"{"            shift, and enter state 19


State 19

	Function -> Type Ident "(" FunctionArgs ")" "{" . StmtList "}"    (rule 4)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"{"            shift, and enter state 52
	"}"            reduce using rule 19
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	"if"           shift, and enter state 56
	"while"        shift, and enter state 57
	"for"          shift, and enter state 58
	"return"       shift, and enter state 59
	Ident          shift, and enter state 60

	Stmt           goto state 21
	StmtComp       goto state 22
	StmtList       goto state 23
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	StmtIf         goto state 26
	StmtWhile      goto state 27
	StmtFor        goto state 28
	StmtReturn     goto state 29
	StmtExp        goto state 30
	Type           goto state 31
	Exp            goto state 32
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 43
	Assig          goto state 44
	Literal        goto state 45

State 20

	FunctionArgs -> FunctionArg "," FunctionArgs .      (rule 6)

	")"            reduce using rule 6


State 21

	StmtList -> Stmt . StmtList                         (rule 18)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"{"            shift, and enter state 52
	"}"            reduce using rule 19
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	"if"           shift, and enter state 56
	"while"        shift, and enter state 57
	"for"          shift, and enter state 58
	"return"       shift, and enter state 59
	Ident          shift, and enter state 60

	Stmt           goto state 21
	StmtComp       goto state 22
	StmtList       goto state 98
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	StmtIf         goto state 26
	StmtWhile      goto state 27
	StmtFor        goto state 28
	StmtReturn     goto state 29
	StmtExp        goto state 30
	Type           goto state 31
	Exp            goto state 32
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 43
	Assig          goto state 44
	Literal        goto state 45

State 22

	Stmt -> StmtComp .                                  (rule 9)

	"int"          reduce using rule 9
	"double"       reduce using rule 9
	"boolean"      reduce using rule 9
	"void"         reduce using rule 9
	FalseLiteral   reduce using rule 9
	TrueLiteral    reduce using rule 9
	IntLiteral     reduce using rule 9
	DoubleLiteral  reduce using rule 9
	StringLiteral  reduce using rule 9
	"("            reduce using rule 9
	"{"            reduce using rule 9
	"}"            reduce using rule 9
	"+"            reduce using rule 9
	"-"            reduce using rule 9
	"!"            reduce using rule 9
	"if"           reduce using rule 9
	"else"         reduce using rule 9
	"while"        reduce using rule 9
	"for"          reduce using rule 9
	"return"       reduce using rule 9
	Ident          reduce using rule 9


State 23

	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList . "}"    (rule 4)

	"}"            shift, and enter state 97


State 24

	Stmt -> StmtDecl .                                  (rule 10)

	"int"          reduce using rule 10
	"double"       reduce using rule 10
	"boolean"      reduce using rule 10
	"void"         reduce using rule 10
	FalseLiteral   reduce using rule 10
	TrueLiteral    reduce using rule 10
	IntLiteral     reduce using rule 10
	DoubleLiteral  reduce using rule 10
	StringLiteral  reduce using rule 10
	"("            reduce using rule 10
	"{"            reduce using rule 10
	"}"            reduce using rule 10
	"+"            reduce using rule 10
	"-"            reduce using rule 10
	"!"            reduce using rule 10
	"if"           reduce using rule 10
	"else"         reduce using rule 10
	"while"        reduce using rule 10
	"for"          reduce using rule 10
	"return"       reduce using rule 10
	Ident          reduce using rule 10


State 25

	Stmt -> StmtAssig .                                 (rule 11)

	"int"          reduce using rule 11
	"double"       reduce using rule 11
	"boolean"      reduce using rule 11
	"void"         reduce using rule 11
	FalseLiteral   reduce using rule 11
	TrueLiteral    reduce using rule 11
	IntLiteral     reduce using rule 11
	DoubleLiteral  reduce using rule 11
	StringLiteral  reduce using rule 11
	"("            reduce using rule 11
	"{"            reduce using rule 11
	"}"            reduce using rule 11
	"+"            reduce using rule 11
	"-"            reduce using rule 11
	"!"            reduce using rule 11
	"if"           reduce using rule 11
	"else"         reduce using rule 11
	"while"        reduce using rule 11
	"for"          reduce using rule 11
	"return"       reduce using rule 11
	Ident          reduce using rule 11


State 26

	Stmt -> StmtIf .                                    (rule 12)

	"int"          reduce using rule 12
	"double"       reduce using rule 12
	"boolean"      reduce using rule 12
	"void"         reduce using rule 12
	FalseLiteral   reduce using rule 12
	TrueLiteral    reduce using rule 12
	IntLiteral     reduce using rule 12
	DoubleLiteral  reduce using rule 12
	StringLiteral  reduce using rule 12
	"("            reduce using rule 12
	"{"            reduce using rule 12
	"}"            reduce using rule 12
	"+"            reduce using rule 12
	"-"            reduce using rule 12
	"!"            reduce using rule 12
	"if"           reduce using rule 12
	"else"         reduce using rule 12
	"while"        reduce using rule 12
	"for"          reduce using rule 12
	"return"       reduce using rule 12
	Ident          reduce using rule 12


State 27

	Stmt -> StmtWhile .                                 (rule 13)

	"int"          reduce using rule 13
	"double"       reduce using rule 13
	"boolean"      reduce using rule 13
	"void"         reduce using rule 13
	FalseLiteral   reduce using rule 13
	TrueLiteral    reduce using rule 13
	IntLiteral     reduce using rule 13
	DoubleLiteral  reduce using rule 13
	StringLiteral  reduce using rule 13
	"("            reduce using rule 13
	"{"            reduce using rule 13
	"}"            reduce using rule 13
	"+"            reduce using rule 13
	"-"            reduce using rule 13
	"!"            reduce using rule 13
	"if"           reduce using rule 13
	"else"         reduce using rule 13
	"while"        reduce using rule 13
	"for"          reduce using rule 13
	"return"       reduce using rule 13
	Ident          reduce using rule 13


State 28

	Stmt -> StmtFor .                                   (rule 14)

	"int"          reduce using rule 14
	"double"       reduce using rule 14
	"boolean"      reduce using rule 14
	"void"         reduce using rule 14
	FalseLiteral   reduce using rule 14
	TrueLiteral    reduce using rule 14
	IntLiteral     reduce using rule 14
	DoubleLiteral  reduce using rule 14
	StringLiteral  reduce using rule 14
	"("            reduce using rule 14
	"{"            reduce using rule 14
	"}"            reduce using rule 14
	"+"            reduce using rule 14
	"-"            reduce using rule 14
	"!"            reduce using rule 14
	"if"           reduce using rule 14
	"else"         reduce using rule 14
	"while"        reduce using rule 14
	"for"          reduce using rule 14
	"return"       reduce using rule 14
	Ident          reduce using rule 14


State 29

	Stmt -> StmtReturn .                                (rule 15)

	"int"          reduce using rule 15
	"double"       reduce using rule 15
	"boolean"      reduce using rule 15
	"void"         reduce using rule 15
	FalseLiteral   reduce using rule 15
	TrueLiteral    reduce using rule 15
	IntLiteral     reduce using rule 15
	DoubleLiteral  reduce using rule 15
	StringLiteral  reduce using rule 15
	"("            reduce using rule 15
	"{"            reduce using rule 15
	"}"            reduce using rule 15
	"+"            reduce using rule 15
	"-"            reduce using rule 15
	"!"            reduce using rule 15
	"if"           reduce using rule 15
	"else"         reduce using rule 15
	"while"        reduce using rule 15
	"for"          reduce using rule 15
	"return"       reduce using rule 15
	Ident          reduce using rule 15


State 30

	Stmt -> StmtExp .                                   (rule 16)

	"int"          reduce using rule 16
	"double"       reduce using rule 16
	"boolean"      reduce using rule 16
	"void"         reduce using rule 16
	FalseLiteral   reduce using rule 16
	TrueLiteral    reduce using rule 16
	IntLiteral     reduce using rule 16
	DoubleLiteral  reduce using rule 16
	StringLiteral  reduce using rule 16
	"("            reduce using rule 16
	"{"            reduce using rule 16
	"}"            reduce using rule 16
	"+"            reduce using rule 16
	"-"            reduce using rule 16
	"!"            reduce using rule 16
	"if"           reduce using rule 16
	"else"         reduce using rule 16
	"while"        reduce using rule 16
	"for"          reduce using rule 16
	"return"       reduce using rule 16
	Ident          reduce using rule 16


State 31

	StmtDecl -> Type . DeclList ";"                     (rule 20)

	Ident          shift, and enter state 96

	DeclList       goto state 94
	Decl           goto state 95

State 32

	StmtExp -> Exp . ";"                                (rule 32)

	";"            shift, and enter state 93


State 33

	Exp -> ExpOr .                                      (rule 37)
	ExpOr -> ExpOr . "||" ExpAnd                        (rule 39)

	")"            reduce using rule 37
	","            reduce using rule 37
	";"            reduce using rule 37
	"||"           shift, and enter state 92


State 34

	ExpOr -> ExpAnd .                                   (rule 38)
	ExpAnd -> ExpAnd . "&&" ExpCompe                    (rule 41)

	")"            reduce using rule 38
	","            reduce using rule 38
	";"            reduce using rule 38
	"||"           reduce using rule 38
	"&&"           shift, and enter state 91


State 35

	ExpAnd -> ExpCompe .                                (rule 40)
	ExpCompe -> ExpCompe . "==" ExpRel                  (rule 43)
	ExpCompe -> ExpCompe . "!=" ExpRel                  (rule 44)

	")"            reduce using rule 40
	","            reduce using rule 40
	";"            reduce using rule 40
	"||"           reduce using rule 40
	"&&"           reduce using rule 40
	"=="           shift, and enter state 89
	"!="           shift, and enter state 90


State 36

	ExpCompe -> ExpRel .                                (rule 42)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 46)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 47)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 48)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 49)

	")"            reduce using rule 42
	","            reduce using rule 42
	";"            reduce using rule 42
	"||"           reduce using rule 42
	"&&"           reduce using rule 42
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	"<"            shift, and enter state 85
	">"            shift, and enter state 86
	"<="           shift, and enter state 87
	">="           shift, and enter state 88


State 37

	ExpRel -> ExpAddi .                                 (rule 45)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 51)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 52)

	")"            reduce using rule 45
	","            reduce using rule 45
	";"            reduce using rule 45
	"||"           reduce using rule 45
	"&&"           reduce using rule 45
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	"<"            reduce using rule 45
	">"            reduce using rule 45
	"<="           reduce using rule 45
	">="           reduce using rule 45
	"+"            shift, and enter state 83
	"-"            shift, and enter state 84


State 38

	ExpAddi -> ExpMulti .                               (rule 50)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 54)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 55)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 56)

	")"            reduce using rule 50
	","            reduce using rule 50
	";"            reduce using rule 50
	"||"           reduce using rule 50
	"&&"           reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	"<"            reduce using rule 50
	">"            reduce using rule 50
	"<="           reduce using rule 50
	">="           reduce using rule 50
	"+"            reduce using rule 50
	"-"            reduce using rule 50
	"/"            shift, and enter state 80
	"%"            shift, and enter state 81
	"*"            shift, and enter state 82


State 39

	ExpMulti -> ExpOneArg .                             (rule 53)

	")"            reduce using rule 53
	","            reduce using rule 53
	";"            reduce using rule 53
	"||"           reduce using rule 53
	"&&"           reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	"<"            reduce using rule 53
	">"            reduce using rule 53
	"<="           reduce using rule 53
	">="           reduce using rule 53
	"+"            reduce using rule 53
	"-"            reduce using rule 53
	"/"            reduce using rule 53
	"%"            reduce using rule 53
	"*"            reduce using rule 53


State 40

	ExpOneArg -> ExpPostfix .                           (rule 57)

	")"            reduce using rule 57
	","            reduce using rule 57
	";"            reduce using rule 57
	"||"           reduce using rule 57
	"&&"           reduce using rule 57
	"=="           reduce using rule 57
	"!="           reduce using rule 57
	"<"            reduce using rule 57
	">"            reduce using rule 57
	"<="           reduce using rule 57
	">="           reduce using rule 57
	"+"            reduce using rule 57
	"-"            reduce using rule 57
	"/"            reduce using rule 57
	"%"            reduce using rule 57
	"*"            reduce using rule 57


State 41

	ExpPostfix -> ExpCallFunc .                         (rule 62)

	")"            reduce using rule 62
	","            reduce using rule 62
	";"            reduce using rule 62
	"||"           reduce using rule 62
	"&&"           reduce using rule 62
	"=="           reduce using rule 62
	"!="           reduce using rule 62
	"<"            reduce using rule 62
	">"            reduce using rule 62
	"<="           reduce using rule 62
	">="           reduce using rule 62
	"+"            reduce using rule 62
	"-"            reduce using rule 62
	"/"            reduce using rule 62
	"%"            reduce using rule 62
	"*"            reduce using rule 62


State 42

	ExpPostfix -> ExpSimp .                             (rule 61)

	")"            reduce using rule 61
	","            reduce using rule 61
	";"            reduce using rule 61
	"||"           reduce using rule 61
	"&&"           reduce using rule 61
	"=="           reduce using rule 61
	"!="           reduce using rule 61
	"<"            reduce using rule 61
	">"            reduce using rule 61
	"<="           reduce using rule 61
	">="           reduce using rule 61
	"+"            reduce using rule 61
	"-"            reduce using rule 61
	"/"            reduce using rule 61
	"%"            reduce using rule 61
	"*"            reduce using rule 61


State 43

	StmtAssig -> ExpAssig . ";"                         (rule 25)
	ExpSimp -> ExpAssig .                               (rule 73)

	";"            shift, and enter state 79
			(reduce using rule 73)

	"||"           reduce using rule 73
	"&&"           reduce using rule 73
	"=="           reduce using rule 73
	"!="           reduce using rule 73
	"<"            reduce using rule 73
	">"            reduce using rule 73
	"<="           reduce using rule 73
	">="           reduce using rule 73
	"+"            reduce using rule 73
	"-"            reduce using rule 73
	"/"            reduce using rule 73
	"%"            reduce using rule 73
	"*"            reduce using rule 73


State 44

	ExpAssig -> Assig .                                 (rule 74)

	")"            reduce using rule 74
	","            reduce using rule 74
	";"            reduce using rule 74
	"||"           reduce using rule 74
	"&&"           reduce using rule 74
	"=="           reduce using rule 74
	"!="           reduce using rule 74
	"<"            reduce using rule 74
	">"            reduce using rule 74
	"<="           reduce using rule 74
	">="           reduce using rule 74
	"+"            reduce using rule 74
	"-"            reduce using rule 74
	"/"            reduce using rule 74
	"%"            reduce using rule 74
	"*"            reduce using rule 74


State 45

	ExpSimp -> Literal .                                (rule 68)

	")"            reduce using rule 68
	","            reduce using rule 68
	";"            reduce using rule 68
	"||"           reduce using rule 68
	"&&"           reduce using rule 68
	"=="           reduce using rule 68
	"!="           reduce using rule 68
	"<"            reduce using rule 68
	">"            reduce using rule 68
	"<="           reduce using rule 68
	">="           reduce using rule 68
	"+"            reduce using rule 68
	"-"            reduce using rule 68
	"/"            reduce using rule 68
	"%"            reduce using rule 68
	"*"            reduce using rule 68


State 46

	Literal -> FalseLiteral .                           (rule 81)

	")"            reduce using rule 81
	","            reduce using rule 81
	";"            reduce using rule 81
	"||"           reduce using rule 81
	"&&"           reduce using rule 81
	"=="           reduce using rule 81
	"!="           reduce using rule 81
	"<"            reduce using rule 81
	">"            reduce using rule 81
	"<="           reduce using rule 81
	">="           reduce using rule 81
	"+"            reduce using rule 81
	"-"            reduce using rule 81
	"/"            reduce using rule 81
	"%"            reduce using rule 81
	"*"            reduce using rule 81


State 47

	Literal -> TrueLiteral .                            (rule 82)

	")"            reduce using rule 82
	","            reduce using rule 82
	";"            reduce using rule 82
	"||"           reduce using rule 82
	"&&"           reduce using rule 82
	"=="           reduce using rule 82
	"!="           reduce using rule 82
	"<"            reduce using rule 82
	">"            reduce using rule 82
	"<="           reduce using rule 82
	">="           reduce using rule 82
	"+"            reduce using rule 82
	"-"            reduce using rule 82
	"/"            reduce using rule 82
	"%"            reduce using rule 82
	"*"            reduce using rule 82


State 48

	Literal -> IntLiteral .                             (rule 78)

	")"            reduce using rule 78
	","            reduce using rule 78
	";"            reduce using rule 78
	"||"           reduce using rule 78
	"&&"           reduce using rule 78
	"=="           reduce using rule 78
	"!="           reduce using rule 78
	"<"            reduce using rule 78
	">"            reduce using rule 78
	"<="           reduce using rule 78
	">="           reduce using rule 78
	"+"            reduce using rule 78
	"-"            reduce using rule 78
	"/"            reduce using rule 78
	"%"            reduce using rule 78
	"*"            reduce using rule 78


State 49

	Literal -> DoubleLiteral .                          (rule 79)

	")"            reduce using rule 79
	","            reduce using rule 79
	";"            reduce using rule 79
	"||"           reduce using rule 79
	"&&"           reduce using rule 79
	"=="           reduce using rule 79
	"!="           reduce using rule 79
	"<"            reduce using rule 79
	">"            reduce using rule 79
	"<="           reduce using rule 79
	">="           reduce using rule 79
	"+"            reduce using rule 79
	"-"            reduce using rule 79
	"/"            reduce using rule 79
	"%"            reduce using rule 79
	"*"            reduce using rule 79


State 50

	Literal -> StringLiteral .                          (rule 80)

	")"            reduce using rule 80
	","            reduce using rule 80
	";"            reduce using rule 80
	"||"           reduce using rule 80
	"&&"           reduce using rule 80
	"=="           reduce using rule 80
	"!="           reduce using rule 80
	"<"            reduce using rule 80
	">"            reduce using rule 80
	"<="           reduce using rule 80
	">="           reduce using rule 80
	"+"            reduce using rule 80
	"-"            reduce using rule 80
	"/"            reduce using rule 80
	"%"            reduce using rule 80
	"*"            reduce using rule 80


State 51

	ExpSimp -> "(" . Exp ")"                            (rule 69)
	ExpSimp -> "(" . "boolean" ")" ExpSimp              (rule 70)
	ExpSimp -> "(" . "int" ")" ExpSimp                  (rule 71)
	ExpSimp -> "(" . "double" ")" ExpSimp               (rule 72)

	"int"          shift, and enter state 76
	"double"       shift, and enter state 77
	"boolean"      shift, and enter state 78
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 75
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 52

	StmtComp -> "{" . StmtList "}"                      (rule 17)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"{"            shift, and enter state 52
	"}"            reduce using rule 19
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	"if"           shift, and enter state 56
	"while"        shift, and enter state 57
	"for"          shift, and enter state 58
	"return"       shift, and enter state 59
	Ident          shift, and enter state 60

	Stmt           goto state 21
	StmtComp       goto state 22
	StmtList       goto state 74
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	StmtIf         goto state 26
	StmtWhile      goto state 27
	StmtFor        goto state 28
	StmtReturn     goto state 29
	StmtExp        goto state 30
	Type           goto state 31
	Exp            goto state 32
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 43
	Assig          goto state 44
	Literal        goto state 45

State 53

	ExpOneArg -> "+" . ExpOneArg                        (rule 59)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpOneArg      goto state 73
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 54

	ExpOneArg -> "-" . ExpOneArg                        (rule 60)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpOneArg      goto state 72
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 55

	ExpOneArg -> "!" . ExpOneArg                        (rule 58)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpOneArg      goto state 71
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 56

	StmtIf -> "if" . "(" Exp ")" Stmt                   (rule 26)
	StmtIf -> "if" . "(" Exp ")" Stmt "else" Stmt       (rule 27)

	"("            shift, and enter state 70


State 57

	StmtWhile -> "while" . "(" Exp ")" Stmt             (rule 28)

	"("            shift, and enter state 69


State 58

	StmtFor -> "for" . "(" Assig ";" Exp ";" Assig ")" Stmt    (rule 29)

	"("            shift, and enter state 68


State 59

	StmtReturn -> "return" . ";"                        (rule 30)
	StmtReturn -> "return" . Exp ";"                    (rule 31)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	";"            shift, and enter state 67
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 65
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 60

	ExpCallFunc -> Ident . "(" ExpList ")"              (rule 63)
	ExpSimp -> Ident .                                  (rule 67)
	Assig -> Ident . "=" ExpSimp                        (rule 75)
	Assig -> Ident . "++"                               (rule 76)
	Assig -> Ident . "--"                               (rule 77)

	"("            shift, and enter state 61
	")"            reduce using rule 67
	","            reduce using rule 67
	";"            reduce using rule 67
	"="            shift, and enter state 62
	"++"           shift, and enter state 63
	"--"           shift, and enter state 64
	"||"           reduce using rule 67
	"&&"           reduce using rule 67
	"=="           reduce using rule 67
	"!="           reduce using rule 67
	"<"            reduce using rule 67
	">"            reduce using rule 67
	"<="           reduce using rule 67
	">="           reduce using rule 67
	"+"            reduce using rule 67
	"-"            reduce using rule 67
	"/"            reduce using rule 67
	"%"            reduce using rule 67
	"*"            reduce using rule 67


State 61

	ExpCallFunc -> Ident "(" . ExpList ")"              (rule 63)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	")"            reduce using rule 66
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 127
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpList        goto state 128
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 62

	Assig -> Ident "=" . ExpSimp                        (rule 75)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	Ident          shift, and enter state 126

	ExpSimp        goto state 125
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 63

	Assig -> Ident "++" .                               (rule 76)

	")"            reduce using rule 76
	","            reduce using rule 76
	";"            reduce using rule 76
	"||"           reduce using rule 76
	"&&"           reduce using rule 76
	"=="           reduce using rule 76
	"!="           reduce using rule 76
	"<"            reduce using rule 76
	">"            reduce using rule 76
	"<="           reduce using rule 76
	">="           reduce using rule 76
	"+"            reduce using rule 76
	"-"            reduce using rule 76
	"/"            reduce using rule 76
	"%"            reduce using rule 76
	"*"            reduce using rule 76


State 64

	Assig -> Ident "--" .                               (rule 77)

	")"            reduce using rule 77
	","            reduce using rule 77
	";"            reduce using rule 77
	"||"           reduce using rule 77
	"&&"           reduce using rule 77
	"=="           reduce using rule 77
	"!="           reduce using rule 77
	"<"            reduce using rule 77
	">"            reduce using rule 77
	"<="           reduce using rule 77
	">="           reduce using rule 77
	"+"            reduce using rule 77
	"-"            reduce using rule 77
	"/"            reduce using rule 77
	"%"            reduce using rule 77
	"*"            reduce using rule 77


State 65

	StmtReturn -> "return" Exp . ";"                    (rule 31)

	";"            shift, and enter state 124


State 66

	ExpSimp -> ExpAssig .                               (rule 73)

	")"            reduce using rule 73
	","            reduce using rule 73
	";"            reduce using rule 73
	"||"           reduce using rule 73
	"&&"           reduce using rule 73
	"=="           reduce using rule 73
	"!="           reduce using rule 73
	"<"            reduce using rule 73
	">"            reduce using rule 73
	"<="           reduce using rule 73
	">="           reduce using rule 73
	"+"            reduce using rule 73
	"-"            reduce using rule 73
	"/"            reduce using rule 73
	"%"            reduce using rule 73
	"*"            reduce using rule 73


State 67

	StmtReturn -> "return" ";" .                        (rule 30)

	"int"          reduce using rule 30
	"double"       reduce using rule 30
	"boolean"      reduce using rule 30
	"void"         reduce using rule 30
	FalseLiteral   reduce using rule 30
	TrueLiteral    reduce using rule 30
	IntLiteral     reduce using rule 30
	DoubleLiteral  reduce using rule 30
	StringLiteral  reduce using rule 30
	"("            reduce using rule 30
	"{"            reduce using rule 30
	"}"            reduce using rule 30
	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"!"            reduce using rule 30
	"if"           reduce using rule 30
	"else"         reduce using rule 30
	"while"        reduce using rule 30
	"for"          reduce using rule 30
	"return"       reduce using rule 30
	Ident          reduce using rule 30


State 68

	StmtFor -> "for" "(" . Assig ";" Exp ";" Assig ")" Stmt    (rule 29)

	Ident          shift, and enter state 123

	Assig          goto state 122

State 69

	StmtWhile -> "while" "(" . Exp ")" Stmt             (rule 28)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 121
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 70

	StmtIf -> "if" "(" . Exp ")" Stmt                   (rule 26)
	StmtIf -> "if" "(" . Exp ")" Stmt "else" Stmt       (rule 27)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 120
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 71

	ExpOneArg -> "!" ExpOneArg .                        (rule 58)

	")"            reduce using rule 58
	","            reduce using rule 58
	";"            reduce using rule 58
	"||"           reduce using rule 58
	"&&"           reduce using rule 58
	"=="           reduce using rule 58
	"!="           reduce using rule 58
	"<"            reduce using rule 58
	">"            reduce using rule 58
	"<="           reduce using rule 58
	">="           reduce using rule 58
	"+"            reduce using rule 58
	"-"            reduce using rule 58
	"/"            reduce using rule 58
	"%"            reduce using rule 58
	"*"            reduce using rule 58


State 72

	ExpOneArg -> "-" ExpOneArg .                        (rule 60)

	")"            reduce using rule 60
	","            reduce using rule 60
	";"            reduce using rule 60
	"||"           reduce using rule 60
	"&&"           reduce using rule 60
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"<"            reduce using rule 60
	">"            reduce using rule 60
	"<="           reduce using rule 60
	">="           reduce using rule 60
	"+"            reduce using rule 60
	"-"            reduce using rule 60
	"/"            reduce using rule 60
	"%"            reduce using rule 60
	"*"            reduce using rule 60


State 73

	ExpOneArg -> "+" ExpOneArg .                        (rule 59)

	")"            reduce using rule 59
	","            reduce using rule 59
	";"            reduce using rule 59
	"||"           reduce using rule 59
	"&&"           reduce using rule 59
	"=="           reduce using rule 59
	"!="           reduce using rule 59
	"<"            reduce using rule 59
	">"            reduce using rule 59
	"<="           reduce using rule 59
	">="           reduce using rule 59
	"+"            reduce using rule 59
	"-"            reduce using rule 59
	"/"            reduce using rule 59
	"%"            reduce using rule 59
	"*"            reduce using rule 59


State 74

	StmtComp -> "{" StmtList . "}"                      (rule 17)

	"}"            shift, and enter state 119


State 75

	ExpSimp -> "(" Exp . ")"                            (rule 69)

	")"            shift, and enter state 118


State 76

	ExpSimp -> "(" "int" . ")" ExpSimp                  (rule 71)

	")"            shift, and enter state 117


State 77

	ExpSimp -> "(" "double" . ")" ExpSimp               (rule 72)

	")"            shift, and enter state 116


State 78

	ExpSimp -> "(" "boolean" . ")" ExpSimp              (rule 70)

	")"            shift, and enter state 115


State 79

	StmtAssig -> ExpAssig ";" .                         (rule 25)

	"int"          reduce using rule 25
	"double"       reduce using rule 25
	"boolean"      reduce using rule 25
	"void"         reduce using rule 25
	FalseLiteral   reduce using rule 25
	TrueLiteral    reduce using rule 25
	IntLiteral     reduce using rule 25
	DoubleLiteral  reduce using rule 25
	StringLiteral  reduce using rule 25
	"("            reduce using rule 25
	"{"            reduce using rule 25
	"}"            reduce using rule 25
	"+"            reduce using rule 25
	"-"            reduce using rule 25
	"!"            reduce using rule 25
	"if"           reduce using rule 25
	"else"         reduce using rule 25
	"while"        reduce using rule 25
	"for"          reduce using rule 25
	"return"       reduce using rule 25
	Ident          reduce using rule 25


State 80

	ExpMulti -> ExpMulti "/" . ExpOneArg                (rule 55)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpOneArg      goto state 114
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 81

	ExpMulti -> ExpMulti "%" . ExpOneArg                (rule 56)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpOneArg      goto state 113
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 82

	ExpMulti -> ExpMulti "*" . ExpOneArg                (rule 54)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpOneArg      goto state 112
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 83

	ExpAddi -> ExpAddi "+" . ExpMulti                   (rule 51)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpMulti       goto state 111
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 84

	ExpAddi -> ExpAddi "-" . ExpMulti                   (rule 52)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpMulti       goto state 110
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 85

	ExpRel -> ExpRel "<" . ExpAddi                      (rule 46)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpAddi        goto state 109
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 86

	ExpRel -> ExpRel ">" . ExpAddi                      (rule 47)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpAddi        goto state 108
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 87

	ExpRel -> ExpRel "<=" . ExpAddi                     (rule 48)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpAddi        goto state 107
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 88

	ExpRel -> ExpRel ">=" . ExpAddi                     (rule 49)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpAddi        goto state 106
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 89

	ExpCompe -> ExpCompe "==" . ExpRel                  (rule 43)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpRel         goto state 105
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 90

	ExpCompe -> ExpCompe "!=" . ExpRel                  (rule 44)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpRel         goto state 104
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 91

	ExpAnd -> ExpAnd "&&" . ExpCompe                    (rule 41)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpCompe       goto state 103
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 92

	ExpOr -> ExpOr "||" . ExpAnd                        (rule 39)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	ExpAnd         goto state 102
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 93

	StmtExp -> Exp ";" .                                (rule 32)

	"int"          reduce using rule 32
	"double"       reduce using rule 32
	"boolean"      reduce using rule 32
	"void"         reduce using rule 32
	FalseLiteral   reduce using rule 32
	TrueLiteral    reduce using rule 32
	IntLiteral     reduce using rule 32
	DoubleLiteral  reduce using rule 32
	StringLiteral  reduce using rule 32
	"("            reduce using rule 32
	"{"            reduce using rule 32
	"}"            reduce using rule 32
	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"!"            reduce using rule 32
	"if"           reduce using rule 32
	"else"         reduce using rule 32
	"while"        reduce using rule 32
	"for"          reduce using rule 32
	"return"       reduce using rule 32
	Ident          reduce using rule 32


State 94

	StmtDecl -> Type DeclList . ";"                     (rule 20)

	";"            shift, and enter state 101


State 95

	DeclList -> Decl .                                  (rule 21)
	DeclList -> Decl . "," DeclList                     (rule 22)

	","            shift, and enter state 100
	";"            reduce using rule 21


State 96

	Decl -> Ident .                                     (rule 23)
	Decl -> Ident . "=" Exp                             (rule 24)

	","            reduce using rule 23
	";"            reduce using rule 23
	"="            shift, and enter state 99


State 97

	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList "}" .    (rule 4)

	"int"          reduce using rule 4
	"double"       reduce using rule 4
	"boolean"      reduce using rule 4
	"void"         reduce using rule 4
	%eof           reduce using rule 4


State 98

	StmtList -> Stmt StmtList .                         (rule 18)

	"}"            reduce using rule 18


State 99

	Decl -> Ident "=" . Exp                             (rule 24)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 138
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 100

	DeclList -> Decl "," . DeclList                     (rule 22)

	Ident          shift, and enter state 96

	DeclList       goto state 137
	Decl           goto state 95

State 101

	StmtDecl -> Type DeclList ";" .                     (rule 20)

	"int"          reduce using rule 20
	"double"       reduce using rule 20
	"boolean"      reduce using rule 20
	"void"         reduce using rule 20
	FalseLiteral   reduce using rule 20
	TrueLiteral    reduce using rule 20
	IntLiteral     reduce using rule 20
	DoubleLiteral  reduce using rule 20
	StringLiteral  reduce using rule 20
	"("            reduce using rule 20
	"{"            reduce using rule 20
	"}"            reduce using rule 20
	"+"            reduce using rule 20
	"-"            reduce using rule 20
	"!"            reduce using rule 20
	"if"           reduce using rule 20
	"else"         reduce using rule 20
	"while"        reduce using rule 20
	"for"          reduce using rule 20
	"return"       reduce using rule 20
	Ident          reduce using rule 20


State 102

	ExpOr -> ExpOr "||" ExpAnd .                        (rule 39)
	ExpAnd -> ExpAnd . "&&" ExpCompe                    (rule 41)

	")"            reduce using rule 39
	","            reduce using rule 39
	";"            reduce using rule 39
	"||"           reduce using rule 39
	"&&"           shift, and enter state 91


State 103

	ExpAnd -> ExpAnd "&&" ExpCompe .                    (rule 41)
	ExpCompe -> ExpCompe . "==" ExpRel                  (rule 43)
	ExpCompe -> ExpCompe . "!=" ExpRel                  (rule 44)

	")"            reduce using rule 41
	","            reduce using rule 41
	";"            reduce using rule 41
	"||"           reduce using rule 41
	"&&"           reduce using rule 41
	"=="           shift, and enter state 89
	"!="           shift, and enter state 90


State 104

	ExpCompe -> ExpCompe "!=" ExpRel .                  (rule 44)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 46)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 47)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 48)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 49)

	")"            reduce using rule 44
	","            reduce using rule 44
	";"            reduce using rule 44
	"||"           reduce using rule 44
	"&&"           reduce using rule 44
	"=="           reduce using rule 44
	"!="           reduce using rule 44
	"<"            shift, and enter state 85
	">"            shift, and enter state 86
	"<="           shift, and enter state 87
	">="           shift, and enter state 88


State 105

	ExpCompe -> ExpCompe "==" ExpRel .                  (rule 43)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 46)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 47)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 48)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 49)

	")"            reduce using rule 43
	","            reduce using rule 43
	";"            reduce using rule 43
	"||"           reduce using rule 43
	"&&"           reduce using rule 43
	"=="           reduce using rule 43
	"!="           reduce using rule 43
	"<"            shift, and enter state 85
	">"            shift, and enter state 86
	"<="           shift, and enter state 87
	">="           shift, and enter state 88


State 106

	ExpRel -> ExpRel ">=" ExpAddi .                     (rule 49)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 51)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 52)

	")"            reduce using rule 49
	","            reduce using rule 49
	";"            reduce using rule 49
	"||"           reduce using rule 49
	"&&"           reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	"<"            reduce using rule 49
	">"            reduce using rule 49
	"<="           reduce using rule 49
	">="           reduce using rule 49
	"+"            shift, and enter state 83
	"-"            shift, and enter state 84


State 107

	ExpRel -> ExpRel "<=" ExpAddi .                     (rule 48)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 51)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 52)

	")"            reduce using rule 48
	","            reduce using rule 48
	";"            reduce using rule 48
	"||"           reduce using rule 48
	"&&"           reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	"<"            reduce using rule 48
	">"            reduce using rule 48
	"<="           reduce using rule 48
	">="           reduce using rule 48
	"+"            shift, and enter state 83
	"-"            shift, and enter state 84


State 108

	ExpRel -> ExpRel ">" ExpAddi .                      (rule 47)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 51)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 52)

	")"            reduce using rule 47
	","            reduce using rule 47
	";"            reduce using rule 47
	"||"           reduce using rule 47
	"&&"           reduce using rule 47
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	"<"            reduce using rule 47
	">"            reduce using rule 47
	"<="           reduce using rule 47
	">="           reduce using rule 47
	"+"            shift, and enter state 83
	"-"            shift, and enter state 84


State 109

	ExpRel -> ExpRel "<" ExpAddi .                      (rule 46)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 51)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 52)

	")"            reduce using rule 46
	","            reduce using rule 46
	";"            reduce using rule 46
	"||"           reduce using rule 46
	"&&"           reduce using rule 46
	"=="           reduce using rule 46
	"!="           reduce using rule 46
	"<"            reduce using rule 46
	">"            reduce using rule 46
	"<="           reduce using rule 46
	">="           reduce using rule 46
	"+"            shift, and enter state 83
	"-"            shift, and enter state 84


State 110

	ExpAddi -> ExpAddi "-" ExpMulti .                   (rule 52)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 54)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 55)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 56)

	")"            reduce using rule 52
	","            reduce using rule 52
	";"            reduce using rule 52
	"||"           reduce using rule 52
	"&&"           reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	"<"            reduce using rule 52
	">"            reduce using rule 52
	"<="           reduce using rule 52
	">="           reduce using rule 52
	"+"            reduce using rule 52
	"-"            reduce using rule 52
	"/"            shift, and enter state 80
	"%"            shift, and enter state 81
	"*"            shift, and enter state 82


State 111

	ExpAddi -> ExpAddi "+" ExpMulti .                   (rule 51)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 54)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 55)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 56)

	")"            reduce using rule 51
	","            reduce using rule 51
	";"            reduce using rule 51
	"||"           reduce using rule 51
	"&&"           reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	"<"            reduce using rule 51
	">"            reduce using rule 51
	"<="           reduce using rule 51
	">="           reduce using rule 51
	"+"            reduce using rule 51
	"-"            reduce using rule 51
	"/"            shift, and enter state 80
	"%"            shift, and enter state 81
	"*"            shift, and enter state 82


State 112

	ExpMulti -> ExpMulti "*" ExpOneArg .                (rule 54)

	")"            reduce using rule 54
	","            reduce using rule 54
	";"            reduce using rule 54
	"||"           reduce using rule 54
	"&&"           reduce using rule 54
	"=="           reduce using rule 54
	"!="           reduce using rule 54
	"<"            reduce using rule 54
	">"            reduce using rule 54
	"<="           reduce using rule 54
	">="           reduce using rule 54
	"+"            reduce using rule 54
	"-"            reduce using rule 54
	"/"            reduce using rule 54
	"%"            reduce using rule 54
	"*"            reduce using rule 54


State 113

	ExpMulti -> ExpMulti "%" ExpOneArg .                (rule 56)

	")"            reduce using rule 56
	","            reduce using rule 56
	";"            reduce using rule 56
	"||"           reduce using rule 56
	"&&"           reduce using rule 56
	"=="           reduce using rule 56
	"!="           reduce using rule 56
	"<"            reduce using rule 56
	">"            reduce using rule 56
	"<="           reduce using rule 56
	">="           reduce using rule 56
	"+"            reduce using rule 56
	"-"            reduce using rule 56
	"/"            reduce using rule 56
	"%"            reduce using rule 56
	"*"            reduce using rule 56


State 114

	ExpMulti -> ExpMulti "/" ExpOneArg .                (rule 55)

	")"            reduce using rule 55
	","            reduce using rule 55
	";"            reduce using rule 55
	"||"           reduce using rule 55
	"&&"           reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"<"            reduce using rule 55
	">"            reduce using rule 55
	"<="           reduce using rule 55
	">="           reduce using rule 55
	"+"            reduce using rule 55
	"-"            reduce using rule 55
	"/"            reduce using rule 55
	"%"            reduce using rule 55
	"*"            reduce using rule 55


State 115

	ExpSimp -> "(" "boolean" ")" . ExpSimp              (rule 70)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	Ident          shift, and enter state 126

	ExpSimp        goto state 136
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 116

	ExpSimp -> "(" "double" ")" . ExpSimp               (rule 72)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	Ident          shift, and enter state 126

	ExpSimp        goto state 135
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 117

	ExpSimp -> "(" "int" ")" . ExpSimp                  (rule 71)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	Ident          shift, and enter state 126

	ExpSimp        goto state 134
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 118

	ExpSimp -> "(" Exp ")" .                            (rule 69)

	")"            reduce using rule 69
	","            reduce using rule 69
	";"            reduce using rule 69
	"||"           reduce using rule 69
	"&&"           reduce using rule 69
	"=="           reduce using rule 69
	"!="           reduce using rule 69
	"<"            reduce using rule 69
	">"            reduce using rule 69
	"<="           reduce using rule 69
	">="           reduce using rule 69
	"+"            reduce using rule 69
	"-"            reduce using rule 69
	"/"            reduce using rule 69
	"%"            reduce using rule 69
	"*"            reduce using rule 69


State 119

	StmtComp -> "{" StmtList "}" .                      (rule 17)

	"int"          reduce using rule 17
	"double"       reduce using rule 17
	"boolean"      reduce using rule 17
	"void"         reduce using rule 17
	FalseLiteral   reduce using rule 17
	TrueLiteral    reduce using rule 17
	IntLiteral     reduce using rule 17
	DoubleLiteral  reduce using rule 17
	StringLiteral  reduce using rule 17
	"("            reduce using rule 17
	"{"            reduce using rule 17
	"}"            reduce using rule 17
	"+"            reduce using rule 17
	"-"            reduce using rule 17
	"!"            reduce using rule 17
	"if"           reduce using rule 17
	"else"         reduce using rule 17
	"while"        reduce using rule 17
	"for"          reduce using rule 17
	"return"       reduce using rule 17
	Ident          reduce using rule 17


State 120

	StmtIf -> "if" "(" Exp . ")" Stmt                   (rule 26)
	StmtIf -> "if" "(" Exp . ")" Stmt "else" Stmt       (rule 27)

	")"            shift, and enter state 133


State 121

	StmtWhile -> "while" "(" Exp . ")" Stmt             (rule 28)

	")"            shift, and enter state 132


State 122

	StmtFor -> "for" "(" Assig . ";" Exp ";" Assig ")" Stmt    (rule 29)

	";"            shift, and enter state 131


State 123

	Assig -> Ident . "=" ExpSimp                        (rule 75)
	Assig -> Ident . "++"                               (rule 76)
	Assig -> Ident . "--"                               (rule 77)

	"="            shift, and enter state 62
	"++"           shift, and enter state 63
	"--"           shift, and enter state 64


State 124

	StmtReturn -> "return" Exp ";" .                    (rule 31)

	"int"          reduce using rule 31
	"double"       reduce using rule 31
	"boolean"      reduce using rule 31
	"void"         reduce using rule 31
	FalseLiteral   reduce using rule 31
	TrueLiteral    reduce using rule 31
	IntLiteral     reduce using rule 31
	DoubleLiteral  reduce using rule 31
	StringLiteral  reduce using rule 31
	"("            reduce using rule 31
	"{"            reduce using rule 31
	"}"            reduce using rule 31
	"+"            reduce using rule 31
	"-"            reduce using rule 31
	"!"            reduce using rule 31
	"if"           reduce using rule 31
	"else"         reduce using rule 31
	"while"        reduce using rule 31
	"for"          reduce using rule 31
	"return"       reduce using rule 31
	Ident          reduce using rule 31


State 125

	Assig -> Ident "=" ExpSimp .                        (rule 75)

	")"            reduce using rule 75
	","            reduce using rule 75
	";"            reduce using rule 75
	"||"           reduce using rule 75
	"&&"           reduce using rule 75
	"=="           reduce using rule 75
	"!="           reduce using rule 75
	"<"            reduce using rule 75
	">"            reduce using rule 75
	"<="           reduce using rule 75
	">="           reduce using rule 75
	"+"            reduce using rule 75
	"-"            reduce using rule 75
	"/"            reduce using rule 75
	"%"            reduce using rule 75
	"*"            reduce using rule 75


State 126

	ExpSimp -> Ident .                                  (rule 67)
	Assig -> Ident . "=" ExpSimp                        (rule 75)
	Assig -> Ident . "++"                               (rule 76)
	Assig -> Ident . "--"                               (rule 77)

	")"            reduce using rule 67
	","            reduce using rule 67
	";"            reduce using rule 67
	"="            shift, and enter state 62
	"++"           shift, and enter state 63
	"--"           shift, and enter state 64
	"||"           reduce using rule 67
	"&&"           reduce using rule 67
	"=="           reduce using rule 67
	"!="           reduce using rule 67
	"<"            reduce using rule 67
	">"            reduce using rule 67
	"<="           reduce using rule 67
	">="           reduce using rule 67
	"+"            reduce using rule 67
	"-"            reduce using rule 67
	"/"            reduce using rule 67
	"%"            reduce using rule 67
	"*"            reduce using rule 67


State 127

	ExpList -> Exp .                                    (rule 64)
	ExpList -> Exp . "," ExpList                        (rule 65)

	")"            reduce using rule 64
	","            shift, and enter state 130


State 128

	ExpCallFunc -> Ident "(" ExpList . ")"              (rule 63)

	")"            shift, and enter state 129


State 129

	ExpCallFunc -> Ident "(" ExpList ")" .              (rule 63)

	")"            reduce using rule 63
	","            reduce using rule 63
	";"            reduce using rule 63
	"||"           reduce using rule 63
	"&&"           reduce using rule 63
	"=="           reduce using rule 63
	"!="           reduce using rule 63
	"<"            reduce using rule 63
	">"            reduce using rule 63
	"<="           reduce using rule 63
	">="           reduce using rule 63
	"+"            reduce using rule 63
	"-"            reduce using rule 63
	"/"            reduce using rule 63
	"%"            reduce using rule 63
	"*"            reduce using rule 63


State 130

	ExpList -> Exp "," . ExpList                        (rule 65)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	")"            reduce using rule 66
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 127
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpList        goto state 142
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 131

	StmtFor -> "for" "(" Assig ";" . Exp ";" Assig ")" Stmt    (rule 29)

	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	Ident          shift, and enter state 60

	Exp            goto state 141
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 66
	Assig          goto state 44
	Literal        goto state 45

State 132

	StmtWhile -> "while" "(" Exp ")" . Stmt             (rule 28)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"{"            shift, and enter state 52
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	"if"           shift, and enter state 56
	"while"        shift, and enter state 57
	"for"          shift, and enter state 58
	"return"       shift, and enter state 59
	Ident          shift, and enter state 60

	Stmt           goto state 140
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	StmtIf         goto state 26
	StmtWhile      goto state 27
	StmtFor        goto state 28
	StmtReturn     goto state 29
	StmtExp        goto state 30
	Type           goto state 31
	Exp            goto state 32
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 43
	Assig          goto state 44
	Literal        goto state 45

State 133

	StmtIf -> "if" "(" Exp ")" . Stmt                   (rule 26)
	StmtIf -> "if" "(" Exp ")" . Stmt "else" Stmt       (rule 27)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"{"            shift, and enter state 52
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	"if"           shift, and enter state 56
	"while"        shift, and enter state 57
	"for"          shift, and enter state 58
	"return"       shift, and enter state 59
	Ident          shift, and enter state 60

	Stmt           goto state 139
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	StmtIf         goto state 26
	StmtWhile      goto state 27
	StmtFor        goto state 28
	StmtReturn     goto state 29
	StmtExp        goto state 30
	Type           goto state 31
	Exp            goto state 32
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 43
	Assig          goto state 44
	Literal        goto state 45

State 134

	ExpSimp -> "(" "int" ")" ExpSimp .                  (rule 71)

	")"            reduce using rule 71
	","            reduce using rule 71
	";"            reduce using rule 71
	"||"           reduce using rule 71
	"&&"           reduce using rule 71
	"=="           reduce using rule 71
	"!="           reduce using rule 71
	"<"            reduce using rule 71
	">"            reduce using rule 71
	"<="           reduce using rule 71
	">="           reduce using rule 71
	"+"            reduce using rule 71
	"-"            reduce using rule 71
	"/"            reduce using rule 71
	"%"            reduce using rule 71
	"*"            reduce using rule 71


State 135

	ExpSimp -> "(" "double" ")" ExpSimp .               (rule 72)

	")"            reduce using rule 72
	","            reduce using rule 72
	";"            reduce using rule 72
	"||"           reduce using rule 72
	"&&"           reduce using rule 72
	"=="           reduce using rule 72
	"!="           reduce using rule 72
	"<"            reduce using rule 72
	">"            reduce using rule 72
	"<="           reduce using rule 72
	">="           reduce using rule 72
	"+"            reduce using rule 72
	"-"            reduce using rule 72
	"/"            reduce using rule 72
	"%"            reduce using rule 72
	"*"            reduce using rule 72


State 136

	ExpSimp -> "(" "boolean" ")" ExpSimp .              (rule 70)

	")"            reduce using rule 70
	","            reduce using rule 70
	";"            reduce using rule 70
	"||"           reduce using rule 70
	"&&"           reduce using rule 70
	"=="           reduce using rule 70
	"!="           reduce using rule 70
	"<"            reduce using rule 70
	">"            reduce using rule 70
	"<="           reduce using rule 70
	">="           reduce using rule 70
	"+"            reduce using rule 70
	"-"            reduce using rule 70
	"/"            reduce using rule 70
	"%"            reduce using rule 70
	"*"            reduce using rule 70


State 137

	DeclList -> Decl "," DeclList .                     (rule 22)

	";"            reduce using rule 22


State 138

	Decl -> Ident "=" Exp .                             (rule 24)

	","            reduce using rule 24
	";"            reduce using rule 24


State 139

	StmtIf -> "if" "(" Exp ")" Stmt .                   (rule 26)
	StmtIf -> "if" "(" Exp ")" Stmt . "else" Stmt       (rule 27)

	"int"          reduce using rule 26
	"double"       reduce using rule 26
	"boolean"      reduce using rule 26
	"void"         reduce using rule 26
	FalseLiteral   reduce using rule 26
	TrueLiteral    reduce using rule 26
	IntLiteral     reduce using rule 26
	DoubleLiteral  reduce using rule 26
	StringLiteral  reduce using rule 26
	"("            reduce using rule 26
	"{"            reduce using rule 26
	"}"            reduce using rule 26
	"+"            reduce using rule 26
	"-"            reduce using rule 26
	"!"            reduce using rule 26
	"if"           reduce using rule 26
	"else"         shift, and enter state 144
			(reduce using rule 26)

	"while"        reduce using rule 26
	"for"          reduce using rule 26
	"return"       reduce using rule 26
	Ident          reduce using rule 26


State 140

	StmtWhile -> "while" "(" Exp ")" Stmt .             (rule 28)

	"int"          reduce using rule 28
	"double"       reduce using rule 28
	"boolean"      reduce using rule 28
	"void"         reduce using rule 28
	FalseLiteral   reduce using rule 28
	TrueLiteral    reduce using rule 28
	IntLiteral     reduce using rule 28
	DoubleLiteral  reduce using rule 28
	StringLiteral  reduce using rule 28
	"("            reduce using rule 28
	"{"            reduce using rule 28
	"}"            reduce using rule 28
	"+"            reduce using rule 28
	"-"            reduce using rule 28
	"!"            reduce using rule 28
	"if"           reduce using rule 28
	"else"         reduce using rule 28
	"while"        reduce using rule 28
	"for"          reduce using rule 28
	"return"       reduce using rule 28
	Ident          reduce using rule 28


State 141

	StmtFor -> "for" "(" Assig ";" Exp . ";" Assig ")" Stmt    (rule 29)

	";"            shift, and enter state 143


State 142

	ExpList -> Exp "," ExpList .                        (rule 65)

	")"            reduce using rule 65


State 143

	StmtFor -> "for" "(" Assig ";" Exp ";" . Assig ")" Stmt    (rule 29)

	Ident          shift, and enter state 123

	Assig          goto state 146

State 144

	StmtIf -> "if" "(" Exp ")" Stmt "else" . Stmt       (rule 27)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"{"            shift, and enter state 52
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	"if"           shift, and enter state 56
	"while"        shift, and enter state 57
	"for"          shift, and enter state 58
	"return"       shift, and enter state 59
	Ident          shift, and enter state 60

	Stmt           goto state 145
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	StmtIf         goto state 26
	StmtWhile      goto state 27
	StmtFor        goto state 28
	StmtReturn     goto state 29
	StmtExp        goto state 30
	Type           goto state 31
	Exp            goto state 32
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 43
	Assig          goto state 44
	Literal        goto state 45

State 145

	StmtIf -> "if" "(" Exp ")" Stmt "else" Stmt .       (rule 27)

	"int"          reduce using rule 27
	"double"       reduce using rule 27
	"boolean"      reduce using rule 27
	"void"         reduce using rule 27
	FalseLiteral   reduce using rule 27
	TrueLiteral    reduce using rule 27
	IntLiteral     reduce using rule 27
	DoubleLiteral  reduce using rule 27
	StringLiteral  reduce using rule 27
	"("            reduce using rule 27
	"{"            reduce using rule 27
	"}"            reduce using rule 27
	"+"            reduce using rule 27
	"-"            reduce using rule 27
	"!"            reduce using rule 27
	"if"           reduce using rule 27
	"else"         reduce using rule 27
	"while"        reduce using rule 27
	"for"          reduce using rule 27
	"return"       reduce using rule 27
	Ident          reduce using rule 27


State 146

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig . ")" Stmt    (rule 29)

	")"            shift, and enter state 147


State 147

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" . Stmt    (rule 29)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 46
	TrueLiteral    shift, and enter state 47
	IntLiteral     shift, and enter state 48
	DoubleLiteral  shift, and enter state 49
	StringLiteral  shift, and enter state 50
	"("            shift, and enter state 51
	"{"            shift, and enter state 52
	"+"            shift, and enter state 53
	"-"            shift, and enter state 54
	"!"            shift, and enter state 55
	"if"           shift, and enter state 56
	"while"        shift, and enter state 57
	"for"          shift, and enter state 58
	"return"       shift, and enter state 59
	Ident          shift, and enter state 60

	Stmt           goto state 148
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	StmtIf         goto state 26
	StmtWhile      goto state 27
	StmtFor        goto state 28
	StmtReturn     goto state 29
	StmtExp        goto state 30
	Type           goto state 31
	Exp            goto state 32
	ExpOr          goto state 33
	ExpAnd         goto state 34
	ExpCompe       goto state 35
	ExpRel         goto state 36
	ExpAddi        goto state 37
	ExpMulti       goto state 38
	ExpOneArg      goto state 39
	ExpPostfix     goto state 40
	ExpCallFunc    goto state 41
	ExpSimp        goto state 42
	ExpAssig       goto state 43
	Assig          goto state 44
	Literal        goto state 45

State 148

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" Stmt .    (rule 29)

	"int"          reduce using rule 29
	"double"       reduce using rule 29
	"boolean"      reduce using rule 29
	"void"         reduce using rule 29
	FalseLiteral   reduce using rule 29
	TrueLiteral    reduce using rule 29
	IntLiteral     reduce using rule 29
	DoubleLiteral  reduce using rule 29
	StringLiteral  reduce using rule 29
	"("            reduce using rule 29
	"{"            reduce using rule 29
	"}"            reduce using rule 29
	"+"            reduce using rule 29
	"-"            reduce using rule 29
	"!"            reduce using rule 29
	"if"           reduce using rule 29
	"else"         reduce using rule 29
	"while"        reduce using rule 29
	"for"          reduce using rule 29
	"return"       reduce using rule 29
	Ident          reduce using rule 29


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 83
Number of terminals: 38
Number of non-terminals: 34
Number of states: 149
