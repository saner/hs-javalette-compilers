-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.5 from .\JavaletteParser.y
-----------------------------------------------------------------------------

state 128 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_javaletteParse -> Program                   (0)
	Program -> FunctionList                            (1)
	FunctionList -> Function FunctionList              (2)
	FunctionList ->                                    (3)
	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList "}"   (4)
	FunctionArgs -> FunctionArg                        (5)
	FunctionArgs -> FunctionArg "," FunctionArgs       (6)
	FunctionArgs ->                                    (7)
	FunctionArg -> Type Ident                          (8)
	Stmt -> StmtComp                                   (9)
	Stmt -> StmtDecl                                   (10)
	Stmt -> StmtAssig                                  (11)
	Stmt -> StmtIf                                     (12)
	Stmt -> StmtWhile                                  (13)
	Stmt -> StmtFor                                    (14)
	Stmt -> StmtReturn                                 (15)
	Stmt -> StmtExp                                    (16)
	StmtComp -> "{" StmtList "}"                       (17)
	StmtList -> Stmt StmtList                          (18)
	StmtList ->                                        (19)
	StmtDecl -> Type DeclList ";"                      (20)
	DeclList -> Decl                                   (21)
	DeclList -> Decl "," DeclList                      (22)
	Decl -> Ident                                      (23)
	Decl -> Ident "=" Exp                              (24)
	StmtAssig -> Assig ";"                             (25)
	Assig -> Ident "=" Exp                             (26)
	Assig -> Ident "++"                                (27)
	Assig -> Ident "--"                                (28)
	StmtIf -> "if" "(" Exp ")" Stmt                    (29)
	StmtIf -> "if" "(" Exp ")" Stmt "else" Stmt        (30)
	StmtWhile -> "while" "(" Exp ")" Stmt              (31)
	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" Stmt   (32)
	StmtReturn -> "return" ";"                         (33)
	StmtReturn -> "return" Exp ";"                     (34)
	StmtExp -> Exp ";"                                 (35)
	Type -> "int"                                      (36)
	Type -> "double"                                   (37)
	Type -> "boolean"                                  (38)
	Type -> "void"                                     (39)
	Exp -> ExpOr                                       (40)
	ExpOr -> ExpAnd                                    (41)
	ExpOr -> ExpOr "||" ExpAnd                         (42)
	ExpAnd -> ExpCompe                                 (43)
	ExpAnd -> ExpAnd "&&" ExpCompe                     (44)
	ExpCompe -> ExpRel                                 (45)
	ExpCompe -> ExpCompe "==" ExpRel                   (46)
	ExpCompe -> ExpCompe "!=" ExpRel                   (47)
	ExpRel -> ExpAddi                                  (48)
	ExpRel -> ExpRel "<" ExpAddi                       (49)
	ExpRel -> ExpRel ">" ExpAddi                       (50)
	ExpRel -> ExpRel "<=" ExpAddi                      (51)
	ExpRel -> ExpRel ">=" ExpAddi                      (52)
	ExpAddi -> ExpMulti                                (53)
	ExpAddi -> ExpAddi "+" ExpMulti                    (54)
	ExpAddi -> ExpAddi "-" ExpMulti                    (55)
	ExpMulti -> ExpOneArg                              (56)
	ExpMulti -> ExpMulti "*" ExpOneArg                 (57)
	ExpMulti -> ExpMulti "/" ExpOneArg                 (58)
	ExpMulti -> ExpMulti "%" ExpOneArg                 (59)
	ExpOneArg -> ExpPostfix                            (60)
	ExpOneArg -> "!" ExpOneArg                         (61)
	ExpOneArg -> "+" ExpOneArg                         (62)
	ExpOneArg -> "-" ExpOneArg                         (63)
	ExpPostfix -> ExpSimp                              (64)
	ExpPostfix -> ExpCallFunc                          (65)
	ExpCallFunc -> Ident "(" ExpList ")"               (66)
	ExpList -> Exp                                     (67)
	ExpList -> Exp "," ExpList                         (68)
	ExpList ->                                         (69)
	ExpSimp -> Ident                                   (70)
	ExpSimp -> Literal                                 (71)
	ExpSimp -> "(" Exp ")"                             (72)
	Literal -> IntLiteral                              (73)
	Literal -> DoubleLiteral                           (74)
	Literal -> StringLiteral                           (75)
	Literal -> FalseLiteral                            (76)
	Literal -> TrueLiteral                             (77)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"int"          { Pos _ TInt }
	"double"       { Pos _ TDouble }
	"boolean"      { Pos _ TBoolean }
	"void"         { Pos _ TVoid }
	FalseLiteral   { Pos _ TFalseLiteral }
	TrueLiteral    { Pos _ TTrueLiteral }
	IntLiteral     { Pos _ (TIntLiteral _) }
	DoubleLiteral  { Pos _ (TDoubleLiteral _) }
	StringLiteral  { Pos _ (TStringLiteral _) }
	"("            { Pos _ TLeftParen }
	")"            { Pos _ TRightParen }
	"{"            { Pos _ TLeftBrace }
	"}"            { Pos _ TRightBrace }
	","            { Pos _ TComma }
	";"            { Pos _ TSemicolon }
	"="            { Pos _ TAssignSign }
	"++"           { Pos _ TIncrement }
	"--"           { Pos _ TDecrement }
	"||"           { Pos _ TOr }
	"&&"           { Pos _ TAnd }
	"=="           { Pos _ TEqualsSign }
	"!="           { Pos _ TNotEqualsSign }
	"<"            { Pos _ TLessSign }
	">"            { Pos _ TGreaterSign }
	"<="           { Pos _ TLeOrEqSign }
	">="           { Pos _ TGrOrEqSign }
	"+"            { Pos _ TPlusSign }
	"-"            { Pos _ TMinusSign }
	"/"            { Pos _ TDivSign }
	"%"            { Pos _ TModSign }
	"*"            { Pos _ TMultiSign }
	"!"            { Pos _ TNot }
	"if"           { Pos _ TIf }
	"else"         { Pos _ TElse }
	"while"        { Pos _ TWhile }
	"for"          { Pos _ TFor }
	"return"       { Pos _ TReturn }
	Ident          { Pos _ (TIdent _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_javaletteParse rule  0
	Program         rule  1
	FunctionList    rules 2, 3
	Function        rule  4
	FunctionArgs    rules 5, 6, 7
	FunctionArg     rule  8
	Stmt            rules 9, 10, 11, 12, 13, 14, 15, 16
	StmtComp        rule  17
	StmtList        rules 18, 19
	StmtDecl        rule  20
	DeclList        rules 21, 22
	Decl            rules 23, 24
	StmtAssig       rule  25
	Assig           rules 26, 27, 28
	StmtIf          rules 29, 30
	StmtWhile       rule  31
	StmtFor         rule  32
	StmtReturn      rules 33, 34
	StmtExp         rule  35
	Type            rules 36, 37, 38, 39
	Exp             rule  40
	ExpOr           rules 41, 42
	ExpAnd          rules 43, 44
	ExpCompe        rules 45, 46, 47
	ExpRel          rules 48, 49, 50, 51, 52
	ExpAddi         rules 53, 54, 55
	ExpMulti        rules 56, 57, 58, 59
	ExpOneArg       rules 60, 61, 62, 63
	ExpPostfix      rules 64, 65
	ExpCallFunc     rule  66
	ExpList         rules 67, 68, 69
	ExpSimp         rules 70, 71, 72
	Literal         rules 73, 74, 75, 76, 77

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	%eof           reduce using rule 3

	Program        goto state 9
	FunctionList   goto state 2
	Function       goto state 3
	Type           goto state 4

State 1


	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8

	FunctionList   goto state 2
	Function       goto state 3
	Type           goto state 4

State 2

	Program -> FunctionList .                           (rule 1)

	%eof           reduce using rule 1


State 3

	FunctionList -> Function . FunctionList             (rule 2)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	%eof           reduce using rule 3

	FunctionList   goto state 11
	Function       goto state 3
	Type           goto state 4

State 4

	Function -> Type . Ident "(" FunctionArgs ")" "{" StmtList "}"    (rule 4)

	Ident          shift, and enter state 10


State 5

	Type -> "int" .                                     (rule 36)

	Ident          reduce using rule 36


State 6

	Type -> "double" .                                  (rule 37)

	Ident          reduce using rule 37


State 7

	Type -> "boolean" .                                 (rule 38)

	Ident          reduce using rule 38


State 8

	Type -> "void" .                                    (rule 39)

	Ident          reduce using rule 39


State 9

	%start_javaletteParse -> Program .                  (rule 0)

	%eof           accept


State 10

	Function -> Type Ident . "(" FunctionArgs ")" "{" StmtList "}"    (rule 4)

	"("            shift, and enter state 12


State 11

	FunctionList -> Function FunctionList .             (rule 2)

	%eof           reduce using rule 2


State 12

	Function -> Type Ident "(" . FunctionArgs ")" "{" StmtList "}"    (rule 4)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	")"            reduce using rule 7

	FunctionArgs   goto state 13
	FunctionArg    goto state 14
	Type           goto state 15

State 13

	Function -> Type Ident "(" FunctionArgs . ")" "{" StmtList "}"    (rule 4)

	")"            shift, and enter state 18


State 14

	FunctionArgs -> FunctionArg .                       (rule 5)
	FunctionArgs -> FunctionArg . "," FunctionArgs      (rule 6)

	")"            reduce using rule 5
	","            shift, and enter state 17


State 15

	FunctionArg -> Type . Ident                         (rule 8)

	Ident          shift, and enter state 16


State 16

	FunctionArg -> Type Ident .                         (rule 8)

	")"            reduce using rule 8
	","            reduce using rule 8


State 17

	FunctionArgs -> FunctionArg "," . FunctionArgs      (rule 6)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	")"            reduce using rule 7

	FunctionArgs   goto state 20
	FunctionArg    goto state 14
	Type           goto state 15

State 18

	Function -> Type Ident "(" FunctionArgs ")" . "{" StmtList "}"    (rule 4)

	"{"            shift, and enter state 19


State 19

	Function -> Type Ident "(" FunctionArgs ")" "{" . StmtList "}"    (rule 4)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"{"            shift, and enter state 51
	"}"            reduce using rule 19
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	"if"           shift, and enter state 55
	"while"        shift, and enter state 56
	"for"          shift, and enter state 57
	"return"       shift, and enter state 58
	Ident          shift, and enter state 59

	Stmt           goto state 21
	StmtComp       goto state 22
	StmtList       goto state 23
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	Assig          goto state 26
	StmtIf         goto state 27
	StmtWhile      goto state 28
	StmtFor        goto state 29
	StmtReturn     goto state 30
	StmtExp        goto state 31
	Type           goto state 32
	Exp            goto state 33
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 20

	FunctionArgs -> FunctionArg "," FunctionArgs .      (rule 6)

	")"            reduce using rule 6


State 21

	StmtList -> Stmt . StmtList                         (rule 18)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"{"            shift, and enter state 51
	"}"            reduce using rule 19
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	"if"           shift, and enter state 55
	"while"        shift, and enter state 56
	"for"          shift, and enter state 57
	"return"       shift, and enter state 58
	Ident          shift, and enter state 59

	Stmt           goto state 21
	StmtComp       goto state 22
	StmtList       goto state 94
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	Assig          goto state 26
	StmtIf         goto state 27
	StmtWhile      goto state 28
	StmtFor        goto state 29
	StmtReturn     goto state 30
	StmtExp        goto state 31
	Type           goto state 32
	Exp            goto state 33
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 22

	Stmt -> StmtComp .                                  (rule 9)

	"int"          reduce using rule 9
	"double"       reduce using rule 9
	"boolean"      reduce using rule 9
	"void"         reduce using rule 9
	FalseLiteral   reduce using rule 9
	TrueLiteral    reduce using rule 9
	IntLiteral     reduce using rule 9
	DoubleLiteral  reduce using rule 9
	StringLiteral  reduce using rule 9
	"("            reduce using rule 9
	"{"            reduce using rule 9
	"}"            reduce using rule 9
	"+"            reduce using rule 9
	"-"            reduce using rule 9
	"!"            reduce using rule 9
	"if"           reduce using rule 9
	"else"         reduce using rule 9
	"while"        reduce using rule 9
	"for"          reduce using rule 9
	"return"       reduce using rule 9
	Ident          reduce using rule 9


State 23

	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList . "}"    (rule 4)

	"}"            shift, and enter state 93


State 24

	Stmt -> StmtDecl .                                  (rule 10)

	"int"          reduce using rule 10
	"double"       reduce using rule 10
	"boolean"      reduce using rule 10
	"void"         reduce using rule 10
	FalseLiteral   reduce using rule 10
	TrueLiteral    reduce using rule 10
	IntLiteral     reduce using rule 10
	DoubleLiteral  reduce using rule 10
	StringLiteral  reduce using rule 10
	"("            reduce using rule 10
	"{"            reduce using rule 10
	"}"            reduce using rule 10
	"+"            reduce using rule 10
	"-"            reduce using rule 10
	"!"            reduce using rule 10
	"if"           reduce using rule 10
	"else"         reduce using rule 10
	"while"        reduce using rule 10
	"for"          reduce using rule 10
	"return"       reduce using rule 10
	Ident          reduce using rule 10


State 25

	Stmt -> StmtAssig .                                 (rule 11)

	"int"          reduce using rule 11
	"double"       reduce using rule 11
	"boolean"      reduce using rule 11
	"void"         reduce using rule 11
	FalseLiteral   reduce using rule 11
	TrueLiteral    reduce using rule 11
	IntLiteral     reduce using rule 11
	DoubleLiteral  reduce using rule 11
	StringLiteral  reduce using rule 11
	"("            reduce using rule 11
	"{"            reduce using rule 11
	"}"            reduce using rule 11
	"+"            reduce using rule 11
	"-"            reduce using rule 11
	"!"            reduce using rule 11
	"if"           reduce using rule 11
	"else"         reduce using rule 11
	"while"        reduce using rule 11
	"for"          reduce using rule 11
	"return"       reduce using rule 11
	Ident          reduce using rule 11


State 26

	StmtAssig -> Assig . ";"                            (rule 25)

	";"            shift, and enter state 92


State 27

	Stmt -> StmtIf .                                    (rule 12)

	"int"          reduce using rule 12
	"double"       reduce using rule 12
	"boolean"      reduce using rule 12
	"void"         reduce using rule 12
	FalseLiteral   reduce using rule 12
	TrueLiteral    reduce using rule 12
	IntLiteral     reduce using rule 12
	DoubleLiteral  reduce using rule 12
	StringLiteral  reduce using rule 12
	"("            reduce using rule 12
	"{"            reduce using rule 12
	"}"            reduce using rule 12
	"+"            reduce using rule 12
	"-"            reduce using rule 12
	"!"            reduce using rule 12
	"if"           reduce using rule 12
	"else"         reduce using rule 12
	"while"        reduce using rule 12
	"for"          reduce using rule 12
	"return"       reduce using rule 12
	Ident          reduce using rule 12


State 28

	Stmt -> StmtWhile .                                 (rule 13)

	"int"          reduce using rule 13
	"double"       reduce using rule 13
	"boolean"      reduce using rule 13
	"void"         reduce using rule 13
	FalseLiteral   reduce using rule 13
	TrueLiteral    reduce using rule 13
	IntLiteral     reduce using rule 13
	DoubleLiteral  reduce using rule 13
	StringLiteral  reduce using rule 13
	"("            reduce using rule 13
	"{"            reduce using rule 13
	"}"            reduce using rule 13
	"+"            reduce using rule 13
	"-"            reduce using rule 13
	"!"            reduce using rule 13
	"if"           reduce using rule 13
	"else"         reduce using rule 13
	"while"        reduce using rule 13
	"for"          reduce using rule 13
	"return"       reduce using rule 13
	Ident          reduce using rule 13


State 29

	Stmt -> StmtFor .                                   (rule 14)

	"int"          reduce using rule 14
	"double"       reduce using rule 14
	"boolean"      reduce using rule 14
	"void"         reduce using rule 14
	FalseLiteral   reduce using rule 14
	TrueLiteral    reduce using rule 14
	IntLiteral     reduce using rule 14
	DoubleLiteral  reduce using rule 14
	StringLiteral  reduce using rule 14
	"("            reduce using rule 14
	"{"            reduce using rule 14
	"}"            reduce using rule 14
	"+"            reduce using rule 14
	"-"            reduce using rule 14
	"!"            reduce using rule 14
	"if"           reduce using rule 14
	"else"         reduce using rule 14
	"while"        reduce using rule 14
	"for"          reduce using rule 14
	"return"       reduce using rule 14
	Ident          reduce using rule 14


State 30

	Stmt -> StmtReturn .                                (rule 15)

	"int"          reduce using rule 15
	"double"       reduce using rule 15
	"boolean"      reduce using rule 15
	"void"         reduce using rule 15
	FalseLiteral   reduce using rule 15
	TrueLiteral    reduce using rule 15
	IntLiteral     reduce using rule 15
	DoubleLiteral  reduce using rule 15
	StringLiteral  reduce using rule 15
	"("            reduce using rule 15
	"{"            reduce using rule 15
	"}"            reduce using rule 15
	"+"            reduce using rule 15
	"-"            reduce using rule 15
	"!"            reduce using rule 15
	"if"           reduce using rule 15
	"else"         reduce using rule 15
	"while"        reduce using rule 15
	"for"          reduce using rule 15
	"return"       reduce using rule 15
	Ident          reduce using rule 15


State 31

	Stmt -> StmtExp .                                   (rule 16)

	"int"          reduce using rule 16
	"double"       reduce using rule 16
	"boolean"      reduce using rule 16
	"void"         reduce using rule 16
	FalseLiteral   reduce using rule 16
	TrueLiteral    reduce using rule 16
	IntLiteral     reduce using rule 16
	DoubleLiteral  reduce using rule 16
	StringLiteral  reduce using rule 16
	"("            reduce using rule 16
	"{"            reduce using rule 16
	"}"            reduce using rule 16
	"+"            reduce using rule 16
	"-"            reduce using rule 16
	"!"            reduce using rule 16
	"if"           reduce using rule 16
	"else"         reduce using rule 16
	"while"        reduce using rule 16
	"for"          reduce using rule 16
	"return"       reduce using rule 16
	Ident          reduce using rule 16


State 32

	StmtDecl -> Type . DeclList ";"                     (rule 20)

	Ident          shift, and enter state 91

	DeclList       goto state 89
	Decl           goto state 90

State 33

	StmtExp -> Exp . ";"                                (rule 35)

	";"            shift, and enter state 88


State 34

	Exp -> ExpOr .                                      (rule 40)
	ExpOr -> ExpOr . "||" ExpAnd                        (rule 42)

	")"            reduce using rule 40
	","            reduce using rule 40
	";"            reduce using rule 40
	"||"           shift, and enter state 87


State 35

	ExpOr -> ExpAnd .                                   (rule 41)
	ExpAnd -> ExpAnd . "&&" ExpCompe                    (rule 44)

	")"            reduce using rule 41
	","            reduce using rule 41
	";"            reduce using rule 41
	"||"           reduce using rule 41
	"&&"           shift, and enter state 86


State 36

	ExpAnd -> ExpCompe .                                (rule 43)
	ExpCompe -> ExpCompe . "==" ExpRel                  (rule 46)
	ExpCompe -> ExpCompe . "!=" ExpRel                  (rule 47)

	")"            reduce using rule 43
	","            reduce using rule 43
	";"            reduce using rule 43
	"||"           reduce using rule 43
	"&&"           reduce using rule 43
	"=="           shift, and enter state 84
	"!="           shift, and enter state 85


State 37

	ExpCompe -> ExpRel .                                (rule 45)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 49)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 50)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 51)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 52)

	")"            reduce using rule 45
	","            reduce using rule 45
	";"            reduce using rule 45
	"||"           reduce using rule 45
	"&&"           reduce using rule 45
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	"<"            shift, and enter state 80
	">"            shift, and enter state 81
	"<="           shift, and enter state 82
	">="           shift, and enter state 83


State 38

	ExpRel -> ExpAddi .                                 (rule 48)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 54)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 55)

	")"            reduce using rule 48
	","            reduce using rule 48
	";"            reduce using rule 48
	"||"           reduce using rule 48
	"&&"           reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	"<"            reduce using rule 48
	">"            reduce using rule 48
	"<="           reduce using rule 48
	">="           reduce using rule 48
	"+"            shift, and enter state 78
	"-"            shift, and enter state 79


State 39

	ExpAddi -> ExpMulti .                               (rule 53)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 57)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 58)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 59)

	")"            reduce using rule 53
	","            reduce using rule 53
	";"            reduce using rule 53
	"||"           reduce using rule 53
	"&&"           reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	"<"            reduce using rule 53
	">"            reduce using rule 53
	"<="           reduce using rule 53
	">="           reduce using rule 53
	"+"            reduce using rule 53
	"-"            reduce using rule 53
	"/"            shift, and enter state 75
	"%"            shift, and enter state 76
	"*"            shift, and enter state 77


State 40

	ExpMulti -> ExpOneArg .                             (rule 56)

	")"            reduce using rule 56
	","            reduce using rule 56
	";"            reduce using rule 56
	"||"           reduce using rule 56
	"&&"           reduce using rule 56
	"=="           reduce using rule 56
	"!="           reduce using rule 56
	"<"            reduce using rule 56
	">"            reduce using rule 56
	"<="           reduce using rule 56
	">="           reduce using rule 56
	"+"            reduce using rule 56
	"-"            reduce using rule 56
	"/"            reduce using rule 56
	"%"            reduce using rule 56
	"*"            reduce using rule 56


State 41

	ExpOneArg -> ExpPostfix .                           (rule 60)

	")"            reduce using rule 60
	","            reduce using rule 60
	";"            reduce using rule 60
	"||"           reduce using rule 60
	"&&"           reduce using rule 60
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"<"            reduce using rule 60
	">"            reduce using rule 60
	"<="           reduce using rule 60
	">="           reduce using rule 60
	"+"            reduce using rule 60
	"-"            reduce using rule 60
	"/"            reduce using rule 60
	"%"            reduce using rule 60
	"*"            reduce using rule 60


State 42

	ExpPostfix -> ExpCallFunc .                         (rule 65)

	")"            reduce using rule 65
	","            reduce using rule 65
	";"            reduce using rule 65
	"||"           reduce using rule 65
	"&&"           reduce using rule 65
	"=="           reduce using rule 65
	"!="           reduce using rule 65
	"<"            reduce using rule 65
	">"            reduce using rule 65
	"<="           reduce using rule 65
	">="           reduce using rule 65
	"+"            reduce using rule 65
	"-"            reduce using rule 65
	"/"            reduce using rule 65
	"%"            reduce using rule 65
	"*"            reduce using rule 65


State 43

	ExpPostfix -> ExpSimp .                             (rule 64)

	")"            reduce using rule 64
	","            reduce using rule 64
	";"            reduce using rule 64
	"||"           reduce using rule 64
	"&&"           reduce using rule 64
	"=="           reduce using rule 64
	"!="           reduce using rule 64
	"<"            reduce using rule 64
	">"            reduce using rule 64
	"<="           reduce using rule 64
	">="           reduce using rule 64
	"+"            reduce using rule 64
	"-"            reduce using rule 64
	"/"            reduce using rule 64
	"%"            reduce using rule 64
	"*"            reduce using rule 64


State 44

	ExpSimp -> Literal .                                (rule 71)

	")"            reduce using rule 71
	","            reduce using rule 71
	";"            reduce using rule 71
	"||"           reduce using rule 71
	"&&"           reduce using rule 71
	"=="           reduce using rule 71
	"!="           reduce using rule 71
	"<"            reduce using rule 71
	">"            reduce using rule 71
	"<="           reduce using rule 71
	">="           reduce using rule 71
	"+"            reduce using rule 71
	"-"            reduce using rule 71
	"/"            reduce using rule 71
	"%"            reduce using rule 71
	"*"            reduce using rule 71


State 45

	Literal -> FalseLiteral .                           (rule 76)

	")"            reduce using rule 76
	","            reduce using rule 76
	";"            reduce using rule 76
	"||"           reduce using rule 76
	"&&"           reduce using rule 76
	"=="           reduce using rule 76
	"!="           reduce using rule 76
	"<"            reduce using rule 76
	">"            reduce using rule 76
	"<="           reduce using rule 76
	">="           reduce using rule 76
	"+"            reduce using rule 76
	"-"            reduce using rule 76
	"/"            reduce using rule 76
	"%"            reduce using rule 76
	"*"            reduce using rule 76


State 46

	Literal -> TrueLiteral .                            (rule 77)

	")"            reduce using rule 77
	","            reduce using rule 77
	";"            reduce using rule 77
	"||"           reduce using rule 77
	"&&"           reduce using rule 77
	"=="           reduce using rule 77
	"!="           reduce using rule 77
	"<"            reduce using rule 77
	">"            reduce using rule 77
	"<="           reduce using rule 77
	">="           reduce using rule 77
	"+"            reduce using rule 77
	"-"            reduce using rule 77
	"/"            reduce using rule 77
	"%"            reduce using rule 77
	"*"            reduce using rule 77


State 47

	Literal -> IntLiteral .                             (rule 73)

	")"            reduce using rule 73
	","            reduce using rule 73
	";"            reduce using rule 73
	"||"           reduce using rule 73
	"&&"           reduce using rule 73
	"=="           reduce using rule 73
	"!="           reduce using rule 73
	"<"            reduce using rule 73
	">"            reduce using rule 73
	"<="           reduce using rule 73
	">="           reduce using rule 73
	"+"            reduce using rule 73
	"-"            reduce using rule 73
	"/"            reduce using rule 73
	"%"            reduce using rule 73
	"*"            reduce using rule 73


State 48

	Literal -> DoubleLiteral .                          (rule 74)

	")"            reduce using rule 74
	","            reduce using rule 74
	";"            reduce using rule 74
	"||"           reduce using rule 74
	"&&"           reduce using rule 74
	"=="           reduce using rule 74
	"!="           reduce using rule 74
	"<"            reduce using rule 74
	">"            reduce using rule 74
	"<="           reduce using rule 74
	">="           reduce using rule 74
	"+"            reduce using rule 74
	"-"            reduce using rule 74
	"/"            reduce using rule 74
	"%"            reduce using rule 74
	"*"            reduce using rule 74


State 49

	Literal -> StringLiteral .                          (rule 75)

	")"            reduce using rule 75
	","            reduce using rule 75
	";"            reduce using rule 75
	"||"           reduce using rule 75
	"&&"           reduce using rule 75
	"=="           reduce using rule 75
	"!="           reduce using rule 75
	"<"            reduce using rule 75
	">"            reduce using rule 75
	"<="           reduce using rule 75
	">="           reduce using rule 75
	"+"            reduce using rule 75
	"-"            reduce using rule 75
	"/"            reduce using rule 75
	"%"            reduce using rule 75
	"*"            reduce using rule 75


State 50

	ExpSimp -> "(" . Exp ")"                            (rule 72)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 74
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 51

	StmtComp -> "{" . StmtList "}"                      (rule 17)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"{"            shift, and enter state 51
	"}"            reduce using rule 19
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	"if"           shift, and enter state 55
	"while"        shift, and enter state 56
	"for"          shift, and enter state 57
	"return"       shift, and enter state 58
	Ident          shift, and enter state 59

	Stmt           goto state 21
	StmtComp       goto state 22
	StmtList       goto state 73
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	Assig          goto state 26
	StmtIf         goto state 27
	StmtWhile      goto state 28
	StmtFor        goto state 29
	StmtReturn     goto state 30
	StmtExp        goto state 31
	Type           goto state 32
	Exp            goto state 33
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 52

	ExpOneArg -> "+" . ExpOneArg                        (rule 62)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpOneArg      goto state 72
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 53

	ExpOneArg -> "-" . ExpOneArg                        (rule 63)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpOneArg      goto state 71
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 54

	ExpOneArg -> "!" . ExpOneArg                        (rule 61)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpOneArg      goto state 70
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 55

	StmtIf -> "if" . "(" Exp ")" Stmt                   (rule 29)
	StmtIf -> "if" . "(" Exp ")" Stmt "else" Stmt       (rule 30)

	"("            shift, and enter state 69


State 56

	StmtWhile -> "while" . "(" Exp ")" Stmt             (rule 31)

	"("            shift, and enter state 68


State 57

	StmtFor -> "for" . "(" Assig ";" Exp ";" Assig ")" Stmt    (rule 32)

	"("            shift, and enter state 67


State 58

	StmtReturn -> "return" . ";"                        (rule 33)
	StmtReturn -> "return" . Exp ";"                    (rule 34)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	";"            shift, and enter state 65
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 64
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 59

	Assig -> Ident . "=" Exp                            (rule 26)
	Assig -> Ident . "++"                               (rule 27)
	Assig -> Ident . "--"                               (rule 28)
	ExpCallFunc -> Ident . "(" ExpList ")"              (rule 66)
	ExpSimp -> Ident .                                  (rule 70)

	"("            shift, and enter state 60
	";"            reduce using rule 70
	"="            shift, and enter state 61
	"++"           shift, and enter state 62
	"--"           shift, and enter state 63
	"||"           reduce using rule 70
	"&&"           reduce using rule 70
	"=="           reduce using rule 70
	"!="           reduce using rule 70
	"<"            reduce using rule 70
	">"            reduce using rule 70
	"<="           reduce using rule 70
	">="           reduce using rule 70
	"+"            reduce using rule 70
	"-"            reduce using rule 70
	"/"            reduce using rule 70
	"%"            reduce using rule 70
	"*"            reduce using rule 70


State 60

	ExpCallFunc -> Ident "(" . ExpList ")"              (rule 66)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	")"            reduce using rule 69
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 119
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpList        goto state 120
	ExpSimp        goto state 43
	Literal        goto state 44

State 61

	Assig -> Ident "=" . Exp                            (rule 26)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 118
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 62

	Assig -> Ident "++" .                               (rule 27)

	")"            reduce using rule 27
	";"            reduce using rule 27


State 63

	Assig -> Ident "--" .                               (rule 28)

	")"            reduce using rule 28
	";"            reduce using rule 28


State 64

	StmtReturn -> "return" Exp . ";"                    (rule 34)

	";"            shift, and enter state 117


State 65

	StmtReturn -> "return" ";" .                        (rule 33)

	"int"          reduce using rule 33
	"double"       reduce using rule 33
	"boolean"      reduce using rule 33
	"void"         reduce using rule 33
	FalseLiteral   reduce using rule 33
	TrueLiteral    reduce using rule 33
	IntLiteral     reduce using rule 33
	DoubleLiteral  reduce using rule 33
	StringLiteral  reduce using rule 33
	"("            reduce using rule 33
	"{"            reduce using rule 33
	"}"            reduce using rule 33
	"+"            reduce using rule 33
	"-"            reduce using rule 33
	"!"            reduce using rule 33
	"if"           reduce using rule 33
	"else"         reduce using rule 33
	"while"        reduce using rule 33
	"for"          reduce using rule 33
	"return"       reduce using rule 33
	Ident          reduce using rule 33


State 66

	ExpCallFunc -> Ident . "(" ExpList ")"              (rule 66)
	ExpSimp -> Ident .                                  (rule 70)

	"("            shift, and enter state 60
	")"            reduce using rule 70
	","            reduce using rule 70
	";"            reduce using rule 70
	"||"           reduce using rule 70
	"&&"           reduce using rule 70
	"=="           reduce using rule 70
	"!="           reduce using rule 70
	"<"            reduce using rule 70
	">"            reduce using rule 70
	"<="           reduce using rule 70
	">="           reduce using rule 70
	"+"            reduce using rule 70
	"-"            reduce using rule 70
	"/"            reduce using rule 70
	"%"            reduce using rule 70
	"*"            reduce using rule 70


State 67

	StmtFor -> "for" "(" . Assig ";" Exp ";" Assig ")" Stmt    (rule 32)

	Ident          shift, and enter state 116

	Assig          goto state 115

State 68

	StmtWhile -> "while" "(" . Exp ")" Stmt             (rule 31)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 114
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 69

	StmtIf -> "if" "(" . Exp ")" Stmt                   (rule 29)
	StmtIf -> "if" "(" . Exp ")" Stmt "else" Stmt       (rule 30)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 113
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 70

	ExpOneArg -> "!" ExpOneArg .                        (rule 61)

	")"            reduce using rule 61
	","            reduce using rule 61
	";"            reduce using rule 61
	"||"           reduce using rule 61
	"&&"           reduce using rule 61
	"=="           reduce using rule 61
	"!="           reduce using rule 61
	"<"            reduce using rule 61
	">"            reduce using rule 61
	"<="           reduce using rule 61
	">="           reduce using rule 61
	"+"            reduce using rule 61
	"-"            reduce using rule 61
	"/"            reduce using rule 61
	"%"            reduce using rule 61
	"*"            reduce using rule 61


State 71

	ExpOneArg -> "-" ExpOneArg .                        (rule 63)

	")"            reduce using rule 63
	","            reduce using rule 63
	";"            reduce using rule 63
	"||"           reduce using rule 63
	"&&"           reduce using rule 63
	"=="           reduce using rule 63
	"!="           reduce using rule 63
	"<"            reduce using rule 63
	">"            reduce using rule 63
	"<="           reduce using rule 63
	">="           reduce using rule 63
	"+"            reduce using rule 63
	"-"            reduce using rule 63
	"/"            reduce using rule 63
	"%"            reduce using rule 63
	"*"            reduce using rule 63


State 72

	ExpOneArg -> "+" ExpOneArg .                        (rule 62)

	")"            reduce using rule 62
	","            reduce using rule 62
	";"            reduce using rule 62
	"||"           reduce using rule 62
	"&&"           reduce using rule 62
	"=="           reduce using rule 62
	"!="           reduce using rule 62
	"<"            reduce using rule 62
	">"            reduce using rule 62
	"<="           reduce using rule 62
	">="           reduce using rule 62
	"+"            reduce using rule 62
	"-"            reduce using rule 62
	"/"            reduce using rule 62
	"%"            reduce using rule 62
	"*"            reduce using rule 62


State 73

	StmtComp -> "{" StmtList . "}"                      (rule 17)

	"}"            shift, and enter state 112


State 74

	ExpSimp -> "(" Exp . ")"                            (rule 72)

	")"            shift, and enter state 111


State 75

	ExpMulti -> ExpMulti "/" . ExpOneArg                (rule 58)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpOneArg      goto state 110
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 76

	ExpMulti -> ExpMulti "%" . ExpOneArg                (rule 59)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpOneArg      goto state 109
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 77

	ExpMulti -> ExpMulti "*" . ExpOneArg                (rule 57)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpOneArg      goto state 108
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 78

	ExpAddi -> ExpAddi "+" . ExpMulti                   (rule 54)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpMulti       goto state 107
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 79

	ExpAddi -> ExpAddi "-" . ExpMulti                   (rule 55)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpMulti       goto state 106
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 80

	ExpRel -> ExpRel "<" . ExpAddi                      (rule 49)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpAddi        goto state 105
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 81

	ExpRel -> ExpRel ">" . ExpAddi                      (rule 50)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpAddi        goto state 104
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 82

	ExpRel -> ExpRel "<=" . ExpAddi                     (rule 51)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpAddi        goto state 103
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 83

	ExpRel -> ExpRel ">=" . ExpAddi                     (rule 52)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpAddi        goto state 102
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 84

	ExpCompe -> ExpCompe "==" . ExpRel                  (rule 46)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpRel         goto state 101
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 85

	ExpCompe -> ExpCompe "!=" . ExpRel                  (rule 47)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpRel         goto state 100
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 86

	ExpAnd -> ExpAnd "&&" . ExpCompe                    (rule 44)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpCompe       goto state 99
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 87

	ExpOr -> ExpOr "||" . ExpAnd                        (rule 42)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	ExpAnd         goto state 98
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 88

	StmtExp -> Exp ";" .                                (rule 35)

	"int"          reduce using rule 35
	"double"       reduce using rule 35
	"boolean"      reduce using rule 35
	"void"         reduce using rule 35
	FalseLiteral   reduce using rule 35
	TrueLiteral    reduce using rule 35
	IntLiteral     reduce using rule 35
	DoubleLiteral  reduce using rule 35
	StringLiteral  reduce using rule 35
	"("            reduce using rule 35
	"{"            reduce using rule 35
	"}"            reduce using rule 35
	"+"            reduce using rule 35
	"-"            reduce using rule 35
	"!"            reduce using rule 35
	"if"           reduce using rule 35
	"else"         reduce using rule 35
	"while"        reduce using rule 35
	"for"          reduce using rule 35
	"return"       reduce using rule 35
	Ident          reduce using rule 35


State 89

	StmtDecl -> Type DeclList . ";"                     (rule 20)

	";"            shift, and enter state 97


State 90

	DeclList -> Decl .                                  (rule 21)
	DeclList -> Decl . "," DeclList                     (rule 22)

	","            shift, and enter state 96
	";"            reduce using rule 21


State 91

	Decl -> Ident .                                     (rule 23)
	Decl -> Ident . "=" Exp                             (rule 24)

	","            reduce using rule 23
	";"            reduce using rule 23
	"="            shift, and enter state 95


State 92

	StmtAssig -> Assig ";" .                            (rule 25)

	"int"          reduce using rule 25
	"double"       reduce using rule 25
	"boolean"      reduce using rule 25
	"void"         reduce using rule 25
	FalseLiteral   reduce using rule 25
	TrueLiteral    reduce using rule 25
	IntLiteral     reduce using rule 25
	DoubleLiteral  reduce using rule 25
	StringLiteral  reduce using rule 25
	"("            reduce using rule 25
	"{"            reduce using rule 25
	"}"            reduce using rule 25
	"+"            reduce using rule 25
	"-"            reduce using rule 25
	"!"            reduce using rule 25
	"if"           reduce using rule 25
	"else"         reduce using rule 25
	"while"        reduce using rule 25
	"for"          reduce using rule 25
	"return"       reduce using rule 25
	Ident          reduce using rule 25


State 93

	Function -> Type Ident "(" FunctionArgs ")" "{" StmtList "}" .    (rule 4)

	"int"          reduce using rule 4
	"double"       reduce using rule 4
	"boolean"      reduce using rule 4
	"void"         reduce using rule 4
	%eof           reduce using rule 4


State 94

	StmtList -> Stmt StmtList .                         (rule 18)

	"}"            reduce using rule 18


State 95

	Decl -> Ident "=" . Exp                             (rule 24)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 127
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 96

	DeclList -> Decl "," . DeclList                     (rule 22)

	Ident          shift, and enter state 91

	DeclList       goto state 126
	Decl           goto state 90

State 97

	StmtDecl -> Type DeclList ";" .                     (rule 20)

	"int"          reduce using rule 20
	"double"       reduce using rule 20
	"boolean"      reduce using rule 20
	"void"         reduce using rule 20
	FalseLiteral   reduce using rule 20
	TrueLiteral    reduce using rule 20
	IntLiteral     reduce using rule 20
	DoubleLiteral  reduce using rule 20
	StringLiteral  reduce using rule 20
	"("            reduce using rule 20
	"{"            reduce using rule 20
	"}"            reduce using rule 20
	"+"            reduce using rule 20
	"-"            reduce using rule 20
	"!"            reduce using rule 20
	"if"           reduce using rule 20
	"else"         reduce using rule 20
	"while"        reduce using rule 20
	"for"          reduce using rule 20
	"return"       reduce using rule 20
	Ident          reduce using rule 20


State 98

	ExpOr -> ExpOr "||" ExpAnd .                        (rule 42)
	ExpAnd -> ExpAnd . "&&" ExpCompe                    (rule 44)

	")"            reduce using rule 42
	","            reduce using rule 42
	";"            reduce using rule 42
	"||"           reduce using rule 42
	"&&"           shift, and enter state 86


State 99

	ExpAnd -> ExpAnd "&&" ExpCompe .                    (rule 44)
	ExpCompe -> ExpCompe . "==" ExpRel                  (rule 46)
	ExpCompe -> ExpCompe . "!=" ExpRel                  (rule 47)

	")"            reduce using rule 44
	","            reduce using rule 44
	";"            reduce using rule 44
	"||"           reduce using rule 44
	"&&"           reduce using rule 44
	"=="           shift, and enter state 84
	"!="           shift, and enter state 85


State 100

	ExpCompe -> ExpCompe "!=" ExpRel .                  (rule 47)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 49)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 50)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 51)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 52)

	")"            reduce using rule 47
	","            reduce using rule 47
	";"            reduce using rule 47
	"||"           reduce using rule 47
	"&&"           reduce using rule 47
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	"<"            shift, and enter state 80
	">"            shift, and enter state 81
	"<="           shift, and enter state 82
	">="           shift, and enter state 83


State 101

	ExpCompe -> ExpCompe "==" ExpRel .                  (rule 46)
	ExpRel -> ExpRel . "<" ExpAddi                      (rule 49)
	ExpRel -> ExpRel . ">" ExpAddi                      (rule 50)
	ExpRel -> ExpRel . "<=" ExpAddi                     (rule 51)
	ExpRel -> ExpRel . ">=" ExpAddi                     (rule 52)

	")"            reduce using rule 46
	","            reduce using rule 46
	";"            reduce using rule 46
	"||"           reduce using rule 46
	"&&"           reduce using rule 46
	"=="           reduce using rule 46
	"!="           reduce using rule 46
	"<"            shift, and enter state 80
	">"            shift, and enter state 81
	"<="           shift, and enter state 82
	">="           shift, and enter state 83


State 102

	ExpRel -> ExpRel ">=" ExpAddi .                     (rule 52)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 54)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 55)

	")"            reduce using rule 52
	","            reduce using rule 52
	";"            reduce using rule 52
	"||"           reduce using rule 52
	"&&"           reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	"<"            reduce using rule 52
	">"            reduce using rule 52
	"<="           reduce using rule 52
	">="           reduce using rule 52
	"+"            shift, and enter state 78
	"-"            shift, and enter state 79


State 103

	ExpRel -> ExpRel "<=" ExpAddi .                     (rule 51)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 54)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 55)

	")"            reduce using rule 51
	","            reduce using rule 51
	";"            reduce using rule 51
	"||"           reduce using rule 51
	"&&"           reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	"<"            reduce using rule 51
	">"            reduce using rule 51
	"<="           reduce using rule 51
	">="           reduce using rule 51
	"+"            shift, and enter state 78
	"-"            shift, and enter state 79


State 104

	ExpRel -> ExpRel ">" ExpAddi .                      (rule 50)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 54)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 55)

	")"            reduce using rule 50
	","            reduce using rule 50
	";"            reduce using rule 50
	"||"           reduce using rule 50
	"&&"           reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	"<"            reduce using rule 50
	">"            reduce using rule 50
	"<="           reduce using rule 50
	">="           reduce using rule 50
	"+"            shift, and enter state 78
	"-"            shift, and enter state 79


State 105

	ExpRel -> ExpRel "<" ExpAddi .                      (rule 49)
	ExpAddi -> ExpAddi . "+" ExpMulti                   (rule 54)
	ExpAddi -> ExpAddi . "-" ExpMulti                   (rule 55)

	")"            reduce using rule 49
	","            reduce using rule 49
	";"            reduce using rule 49
	"||"           reduce using rule 49
	"&&"           reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	"<"            reduce using rule 49
	">"            reduce using rule 49
	"<="           reduce using rule 49
	">="           reduce using rule 49
	"+"            shift, and enter state 78
	"-"            shift, and enter state 79


State 106

	ExpAddi -> ExpAddi "-" ExpMulti .                   (rule 55)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 57)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 58)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 59)

	")"            reduce using rule 55
	","            reduce using rule 55
	";"            reduce using rule 55
	"||"           reduce using rule 55
	"&&"           reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"<"            reduce using rule 55
	">"            reduce using rule 55
	"<="           reduce using rule 55
	">="           reduce using rule 55
	"+"            reduce using rule 55
	"-"            reduce using rule 55
	"/"            shift, and enter state 75
	"%"            shift, and enter state 76
	"*"            shift, and enter state 77


State 107

	ExpAddi -> ExpAddi "+" ExpMulti .                   (rule 54)
	ExpMulti -> ExpMulti . "*" ExpOneArg                (rule 57)
	ExpMulti -> ExpMulti . "/" ExpOneArg                (rule 58)
	ExpMulti -> ExpMulti . "%" ExpOneArg                (rule 59)

	")"            reduce using rule 54
	","            reduce using rule 54
	";"            reduce using rule 54
	"||"           reduce using rule 54
	"&&"           reduce using rule 54
	"=="           reduce using rule 54
	"!="           reduce using rule 54
	"<"            reduce using rule 54
	">"            reduce using rule 54
	"<="           reduce using rule 54
	">="           reduce using rule 54
	"+"            reduce using rule 54
	"-"            reduce using rule 54
	"/"            shift, and enter state 75
	"%"            shift, and enter state 76
	"*"            shift, and enter state 77


State 108

	ExpMulti -> ExpMulti "*" ExpOneArg .                (rule 57)

	")"            reduce using rule 57
	","            reduce using rule 57
	";"            reduce using rule 57
	"||"           reduce using rule 57
	"&&"           reduce using rule 57
	"=="           reduce using rule 57
	"!="           reduce using rule 57
	"<"            reduce using rule 57
	">"            reduce using rule 57
	"<="           reduce using rule 57
	">="           reduce using rule 57
	"+"            reduce using rule 57
	"-"            reduce using rule 57
	"/"            reduce using rule 57
	"%"            reduce using rule 57
	"*"            reduce using rule 57


State 109

	ExpMulti -> ExpMulti "%" ExpOneArg .                (rule 59)

	")"            reduce using rule 59
	","            reduce using rule 59
	";"            reduce using rule 59
	"||"           reduce using rule 59
	"&&"           reduce using rule 59
	"=="           reduce using rule 59
	"!="           reduce using rule 59
	"<"            reduce using rule 59
	">"            reduce using rule 59
	"<="           reduce using rule 59
	">="           reduce using rule 59
	"+"            reduce using rule 59
	"-"            reduce using rule 59
	"/"            reduce using rule 59
	"%"            reduce using rule 59
	"*"            reduce using rule 59


State 110

	ExpMulti -> ExpMulti "/" ExpOneArg .                (rule 58)

	")"            reduce using rule 58
	","            reduce using rule 58
	";"            reduce using rule 58
	"||"           reduce using rule 58
	"&&"           reduce using rule 58
	"=="           reduce using rule 58
	"!="           reduce using rule 58
	"<"            reduce using rule 58
	">"            reduce using rule 58
	"<="           reduce using rule 58
	">="           reduce using rule 58
	"+"            reduce using rule 58
	"-"            reduce using rule 58
	"/"            reduce using rule 58
	"%"            reduce using rule 58
	"*"            reduce using rule 58


State 111

	ExpSimp -> "(" Exp ")" .                            (rule 72)

	")"            reduce using rule 72
	","            reduce using rule 72
	";"            reduce using rule 72
	"||"           reduce using rule 72
	"&&"           reduce using rule 72
	"=="           reduce using rule 72
	"!="           reduce using rule 72
	"<"            reduce using rule 72
	">"            reduce using rule 72
	"<="           reduce using rule 72
	">="           reduce using rule 72
	"+"            reduce using rule 72
	"-"            reduce using rule 72
	"/"            reduce using rule 72
	"%"            reduce using rule 72
	"*"            reduce using rule 72


State 112

	StmtComp -> "{" StmtList "}" .                      (rule 17)

	"int"          reduce using rule 17
	"double"       reduce using rule 17
	"boolean"      reduce using rule 17
	"void"         reduce using rule 17
	FalseLiteral   reduce using rule 17
	TrueLiteral    reduce using rule 17
	IntLiteral     reduce using rule 17
	DoubleLiteral  reduce using rule 17
	StringLiteral  reduce using rule 17
	"("            reduce using rule 17
	"{"            reduce using rule 17
	"}"            reduce using rule 17
	"+"            reduce using rule 17
	"-"            reduce using rule 17
	"!"            reduce using rule 17
	"if"           reduce using rule 17
	"else"         reduce using rule 17
	"while"        reduce using rule 17
	"for"          reduce using rule 17
	"return"       reduce using rule 17
	Ident          reduce using rule 17


State 113

	StmtIf -> "if" "(" Exp . ")" Stmt                   (rule 29)
	StmtIf -> "if" "(" Exp . ")" Stmt "else" Stmt       (rule 30)

	")"            shift, and enter state 125


State 114

	StmtWhile -> "while" "(" Exp . ")" Stmt             (rule 31)

	")"            shift, and enter state 124


State 115

	StmtFor -> "for" "(" Assig . ";" Exp ";" Assig ")" Stmt    (rule 32)

	";"            shift, and enter state 123


State 116

	Assig -> Ident . "=" Exp                            (rule 26)
	Assig -> Ident . "++"                               (rule 27)
	Assig -> Ident . "--"                               (rule 28)

	"="            shift, and enter state 61
	"++"           shift, and enter state 62
	"--"           shift, and enter state 63


State 117

	StmtReturn -> "return" Exp ";" .                    (rule 34)

	"int"          reduce using rule 34
	"double"       reduce using rule 34
	"boolean"      reduce using rule 34
	"void"         reduce using rule 34
	FalseLiteral   reduce using rule 34
	TrueLiteral    reduce using rule 34
	IntLiteral     reduce using rule 34
	DoubleLiteral  reduce using rule 34
	StringLiteral  reduce using rule 34
	"("            reduce using rule 34
	"{"            reduce using rule 34
	"}"            reduce using rule 34
	"+"            reduce using rule 34
	"-"            reduce using rule 34
	"!"            reduce using rule 34
	"if"           reduce using rule 34
	"else"         reduce using rule 34
	"while"        reduce using rule 34
	"for"          reduce using rule 34
	"return"       reduce using rule 34
	Ident          reduce using rule 34


State 118

	Assig -> Ident "=" Exp .                            (rule 26)

	")"            reduce using rule 26
	";"            reduce using rule 26


State 119

	ExpList -> Exp .                                    (rule 67)
	ExpList -> Exp . "," ExpList                        (rule 68)

	")"            reduce using rule 67
	","            shift, and enter state 122


State 120

	ExpCallFunc -> Ident "(" ExpList . ")"              (rule 66)

	")"            shift, and enter state 121


State 121

	ExpCallFunc -> Ident "(" ExpList ")" .              (rule 66)

	")"            reduce using rule 66
	","            reduce using rule 66
	";"            reduce using rule 66
	"||"           reduce using rule 66
	"&&"           reduce using rule 66
	"=="           reduce using rule 66
	"!="           reduce using rule 66
	"<"            reduce using rule 66
	">"            reduce using rule 66
	"<="           reduce using rule 66
	">="           reduce using rule 66
	"+"            reduce using rule 66
	"-"            reduce using rule 66
	"/"            reduce using rule 66
	"%"            reduce using rule 66
	"*"            reduce using rule 66


State 122

	ExpList -> Exp "," . ExpList                        (rule 68)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	")"            reduce using rule 69
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 119
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpList        goto state 131
	ExpSimp        goto state 43
	Literal        goto state 44

State 123

	StmtFor -> "for" "(" Assig ";" . Exp ";" Assig ")" Stmt    (rule 32)

	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	Ident          shift, and enter state 66

	Exp            goto state 130
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 124

	StmtWhile -> "while" "(" Exp ")" . Stmt             (rule 31)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"{"            shift, and enter state 51
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	"if"           shift, and enter state 55
	"while"        shift, and enter state 56
	"for"          shift, and enter state 57
	"return"       shift, and enter state 58
	Ident          shift, and enter state 59

	Stmt           goto state 129
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	Assig          goto state 26
	StmtIf         goto state 27
	StmtWhile      goto state 28
	StmtFor        goto state 29
	StmtReturn     goto state 30
	StmtExp        goto state 31
	Type           goto state 32
	Exp            goto state 33
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 125

	StmtIf -> "if" "(" Exp ")" . Stmt                   (rule 29)
	StmtIf -> "if" "(" Exp ")" . Stmt "else" Stmt       (rule 30)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"{"            shift, and enter state 51
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	"if"           shift, and enter state 55
	"while"        shift, and enter state 56
	"for"          shift, and enter state 57
	"return"       shift, and enter state 58
	Ident          shift, and enter state 59

	Stmt           goto state 128
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	Assig          goto state 26
	StmtIf         goto state 27
	StmtWhile      goto state 28
	StmtFor        goto state 29
	StmtReturn     goto state 30
	StmtExp        goto state 31
	Type           goto state 32
	Exp            goto state 33
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 126

	DeclList -> Decl "," DeclList .                     (rule 22)

	";"            reduce using rule 22


State 127

	Decl -> Ident "=" Exp .                             (rule 24)

	","            reduce using rule 24
	";"            reduce using rule 24


State 128

	StmtIf -> "if" "(" Exp ")" Stmt .                   (rule 29)
	StmtIf -> "if" "(" Exp ")" Stmt . "else" Stmt       (rule 30)

	"int"          reduce using rule 29
	"double"       reduce using rule 29
	"boolean"      reduce using rule 29
	"void"         reduce using rule 29
	FalseLiteral   reduce using rule 29
	TrueLiteral    reduce using rule 29
	IntLiteral     reduce using rule 29
	DoubleLiteral  reduce using rule 29
	StringLiteral  reduce using rule 29
	"("            reduce using rule 29
	"{"            reduce using rule 29
	"}"            reduce using rule 29
	"+"            reduce using rule 29
	"-"            reduce using rule 29
	"!"            reduce using rule 29
	"if"           reduce using rule 29
	"else"         shift, and enter state 133
			(reduce using rule 29)

	"while"        reduce using rule 29
	"for"          reduce using rule 29
	"return"       reduce using rule 29
	Ident          reduce using rule 29


State 129

	StmtWhile -> "while" "(" Exp ")" Stmt .             (rule 31)

	"int"          reduce using rule 31
	"double"       reduce using rule 31
	"boolean"      reduce using rule 31
	"void"         reduce using rule 31
	FalseLiteral   reduce using rule 31
	TrueLiteral    reduce using rule 31
	IntLiteral     reduce using rule 31
	DoubleLiteral  reduce using rule 31
	StringLiteral  reduce using rule 31
	"("            reduce using rule 31
	"{"            reduce using rule 31
	"}"            reduce using rule 31
	"+"            reduce using rule 31
	"-"            reduce using rule 31
	"!"            reduce using rule 31
	"if"           reduce using rule 31
	"else"         reduce using rule 31
	"while"        reduce using rule 31
	"for"          reduce using rule 31
	"return"       reduce using rule 31
	Ident          reduce using rule 31


State 130

	StmtFor -> "for" "(" Assig ";" Exp . ";" Assig ")" Stmt    (rule 32)

	";"            shift, and enter state 132


State 131

	ExpList -> Exp "," ExpList .                        (rule 68)

	")"            reduce using rule 68


State 132

	StmtFor -> "for" "(" Assig ";" Exp ";" . Assig ")" Stmt    (rule 32)

	Ident          shift, and enter state 116

	Assig          goto state 135

State 133

	StmtIf -> "if" "(" Exp ")" Stmt "else" . Stmt       (rule 30)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"{"            shift, and enter state 51
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	"if"           shift, and enter state 55
	"while"        shift, and enter state 56
	"for"          shift, and enter state 57
	"return"       shift, and enter state 58
	Ident          shift, and enter state 59

	Stmt           goto state 134
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	Assig          goto state 26
	StmtIf         goto state 27
	StmtWhile      goto state 28
	StmtFor        goto state 29
	StmtReturn     goto state 30
	StmtExp        goto state 31
	Type           goto state 32
	Exp            goto state 33
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 134

	StmtIf -> "if" "(" Exp ")" Stmt "else" Stmt .       (rule 30)

	"int"          reduce using rule 30
	"double"       reduce using rule 30
	"boolean"      reduce using rule 30
	"void"         reduce using rule 30
	FalseLiteral   reduce using rule 30
	TrueLiteral    reduce using rule 30
	IntLiteral     reduce using rule 30
	DoubleLiteral  reduce using rule 30
	StringLiteral  reduce using rule 30
	"("            reduce using rule 30
	"{"            reduce using rule 30
	"}"            reduce using rule 30
	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"!"            reduce using rule 30
	"if"           reduce using rule 30
	"else"         reduce using rule 30
	"while"        reduce using rule 30
	"for"          reduce using rule 30
	"return"       reduce using rule 30
	Ident          reduce using rule 30


State 135

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig . ")" Stmt    (rule 32)

	")"            shift, and enter state 136


State 136

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" . Stmt    (rule 32)

	"int"          shift, and enter state 5
	"double"       shift, and enter state 6
	"boolean"      shift, and enter state 7
	"void"         shift, and enter state 8
	FalseLiteral   shift, and enter state 45
	TrueLiteral    shift, and enter state 46
	IntLiteral     shift, and enter state 47
	DoubleLiteral  shift, and enter state 48
	StringLiteral  shift, and enter state 49
	"("            shift, and enter state 50
	"{"            shift, and enter state 51
	"+"            shift, and enter state 52
	"-"            shift, and enter state 53
	"!"            shift, and enter state 54
	"if"           shift, and enter state 55
	"while"        shift, and enter state 56
	"for"          shift, and enter state 57
	"return"       shift, and enter state 58
	Ident          shift, and enter state 59

	Stmt           goto state 137
	StmtComp       goto state 22
	StmtDecl       goto state 24
	StmtAssig      goto state 25
	Assig          goto state 26
	StmtIf         goto state 27
	StmtWhile      goto state 28
	StmtFor        goto state 29
	StmtReturn     goto state 30
	StmtExp        goto state 31
	Type           goto state 32
	Exp            goto state 33
	ExpOr          goto state 34
	ExpAnd         goto state 35
	ExpCompe       goto state 36
	ExpRel         goto state 37
	ExpAddi        goto state 38
	ExpMulti       goto state 39
	ExpOneArg      goto state 40
	ExpPostfix     goto state 41
	ExpCallFunc    goto state 42
	ExpSimp        goto state 43
	Literal        goto state 44

State 137

	StmtFor -> "for" "(" Assig ";" Exp ";" Assig ")" Stmt .    (rule 32)

	"int"          reduce using rule 32
	"double"       reduce using rule 32
	"boolean"      reduce using rule 32
	"void"         reduce using rule 32
	FalseLiteral   reduce using rule 32
	TrueLiteral    reduce using rule 32
	IntLiteral     reduce using rule 32
	DoubleLiteral  reduce using rule 32
	StringLiteral  reduce using rule 32
	"("            reduce using rule 32
	"{"            reduce using rule 32
	"}"            reduce using rule 32
	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"!"            reduce using rule 32
	"if"           reduce using rule 32
	"else"         reduce using rule 32
	"while"        reduce using rule 32
	"for"          reduce using rule 32
	"return"       reduce using rule 32
	Ident          reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 78
Number of terminals: 38
Number of non-terminals: 33
Number of states: 138
